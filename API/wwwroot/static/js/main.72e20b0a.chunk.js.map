{"version":3,"sources":["app/api/agent.ts","app/utils/history.ts","features/account/accountSlice.ts","features/announcement/announcementSlice.ts","features/dashboard/DashboardSlice.ts","features/payment/invoiceSlice.ts","features/modeOfPayment/modeOfPaymentSlice.ts","features/slot/slotSlice.ts","features/tenant/tenantSlice.ts","features/user/UserSlice.ts","features/report/reportSlice.ts","app/store/configureStore.ts","app/models/slot.ts","features/navMenu/NavMenuItem.tsx","features/navMenu/NavMenu.tsx","app/layouts/components/PrivateRoute.tsx","app/layouts/components/buttons/AddButton.tsx","app/layouts/components/form/FormButtonContainer.tsx","app/layouts/components/form/FormTextInput.tsx","app/layouts/components/items/DetailItem.tsx","app/layouts/components/pages/DetailsPage.tsx","app/layouts/components/pages/FormPage.tsx","app/layouts/components/loading/LoadingComponent.tsx","features/account/Account.tsx","app/layouts/components/pages/MainPage.tsx","app/layouts/components/table/CustomTablePagination.tsx","app/layouts/components/buttons/NavigationButton.tsx","app/layouts/components/table/CustomTable.tsx","features/announcement/Announcement.tsx","app/layouts/formatter/common.ts","app/layouts/components/buttons/DeleteButton.tsx","features/announcement/AnnouncementDetails.tsx","app/layouts/components/form/FormTextArea.tsx","features/announcement/AnnouncementForm.tsx","app/layouts/components/cards/DashboardCard.tsx","features/dashboard/Dashboard.tsx","features/account/LoginForm.tsx","features/map/Map.tsx","app/models/invoice.ts","features/modeOfPayment/ModeOfPayment.tsx","features/modeOfPayment/ModeOfPaymentDetails.tsx","features/modeOfPayment/ModeOfPaymentForm.tsx","app/utils/common.ts","app/models/report.ts","features/payment/Payment.tsx","app/layouts/components/buttons/UpdateButton.tsx","features/payment/PaymentDetails.tsx","features/report/Report.tsx","features/slot/Slot.tsx","features/slot/SlotDetails.tsx","app/layouts/components/form/FormSelectInput.tsx","features/slot/SlotForm.tsx","features/tenant/Tenant.tsx","app/layouts/components/form/FormDateInput.tsx","features/tenant/TenantForm.tsx","app/layouts/image-upload/ImageUpload.tsx","app/layouts/components/buttons/FunctionalButton.tsx","app/layouts/components/images/ImageThumbnail.tsx","features/tenant/TenantDetails.tsx","features/user/User.tsx","features/user/UserDetails.tsx","features/user/UserForm.tsx","app/layouts/components/App.tsx","reportWebVitals.ts","app/layouts/components/CustomRouter.tsx","index.tsx"],"names":["axios","defaults","baseURL","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","error","status","errors","modelStateErrors","key","push","toast","flat","title","Promise","reject","url","get","then","body","post","put","delete","agent","Account","login","values","register","currentUser","Announcement","list","details","id","create","update","Dashboard","ModeOfPayment","Invoice","updatePaymentStatus","Slot","Tenant","getContractPhotos","uploadContract","bodyFormData","FormData","append","file","deleteTenantContractPhoto","terminateTenantContract","slotTenants","Users","updatePassword","Report","getInvoiceReport","reportType","date","createBrowserHistory","signInUserAsync","createAsyncThunk","thunkAPI","a","localStorage","setItem","JSON","stringify","rejectWithValue","fetchCurrentUserAsync","_","dispatch","setUser","parse","getItem","condition","accountSlice","createSlice","name","initialState","reducers","signOut","state","removeItem","history","action","payload","extraReducers","builder","addCase","rejected","addMatcher","isAnyOf","fulfilled","console","log","actions","announcements","isFetching","announcement","undefined","isFetchingDetails","isSaving","fetchAnnouncementsAsync","fetchAnnouncementDetailsAsync","createAnnouncementAsync","updateAnnouncementDetailsAsync","deleteAnnouncementDetailsAsync","announcementSlice","pending","dashboard","fetchDashboardAsync","dashboardSlice","invoices","invoice","fetchInvoicesAsync","fetchInvoiceDetailsAsync","createInvoiceAsync","updateInvoiceDetailsAsync","updateInvoicePaymentStatusAsync","model","invoiceSlice","modeOfPayments","modeOfPayment","fetchModeOfPaymentsAsync","fetchModeOfPaymentDetailsAsync","createModeOfPaymentAsync","updateModeOfPaymentDetailsAsync","deleteModeOfPaymentDetailsAsync","modeOfPaymentSlice","updateStatus","map","i","isEnabled","slots","slot","tenants","fetchSlotsAsync","fetchSlotDetailsAsync","createSlotAsync","updateSlotDetailsAsync","deleteSlotDetailsAsync","fetchSlotTanantsAsync","slotSlice","tenant","contractPhotos","isFetchingPhotos","fetchTenantsAsync","fetchTenantDetailsAsync","createTenantsAsync","updateTenantDetailsAsync","uploadTenantContractPhoto","getTenantContractPhoto","trunkApi","tenantSlice","users","fetchUsersAsync","fetchUserDetailsAsync","createUserAsync","updateUserDetailsAsync","updateUserPasswordAsync","deleteUserDetailsAsync","userSlice","report","fetchInvoiceReportAsync","reportSlice","SlotStatus","configureStore","reducer","useAppDispatch","useDispatch","useAppSelecter","useSelector","NavMenuItem","icon","navigateTo","onClick","Nav","Link","className","as","to","NavMenu","defaultActiveKey","href","roles","every","toLowerCase","style","position","bottom","PrivateLayout","Row","Col","lg","PrivateRoute","AddButton","loading","disabled","Button","type","content","FormButtonContainer","children","FormTextInput","props","useField","field","meta","FormLabel","label","Form","Field","touched","Label","basic","color","DetailItem","value","space","DetailsPage","backNavigationLink","FormPage","form","LoadingComponent","inverted","Dimmer","active","Loader","useState","newPassword","verifyPassword","password","setPassword","showPasswordNotMatchError","setShowPasswordNotMatchError","userData","getCurrentUser","useEffect","validationSchema","Yup","min","required","onSubmit","username","firstName","lastName","phone","address","Message","initialValues","enableReinitialize","handleSubmit","isValid","autoComplete","placeholder","MainPage","CustomTablePagination","theme","useTheme","count","page","rowsPerPage","onPageChange","Box","sx","flexShrink","ml","IconButton","event","direction","Math","ceil","max","NavigationButton","CustomTable","columns","rows","searchValue","onSearch","buttonTitle","tableControls","noPagination","React","setPage","setRowsPerPage","emptyRows","length","md","Control","height","onChange","evt","target","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","column","index","TableCell","align","fontSize","TableBody","slice","row","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","searchKey","setSearchKey","isFetchingAnnouncements","useMemo","filter","includes","moment","dateCreated","format","message","currencyFormatter","amount","Intl","NumberFormat","currency","maximumFractionDigits","dateFormatter","DeleteButton","AnnouncementDetails","useParams","handleDelete","announcementId","FormTextArea","AnnouncementForm","setAnnouncement","announcementData","handleResult","DashboardCard","subtitle","NavLink","dashboardData","isFetchingDashboard","dashboardCardInfos","total","availableSlots","rentedSlots","unpaidInvoices","pendingPayments","latePayments","LoginForm","PaymentStatus","InvoiceStatus","Map","isFetchingSlots","src","alt","backgroundColor","width","marginTop","Available","s","slotNumber","isFetchingModeOfPayments","selectedStatus","setSelectedStatus","searchResult","bankName","accountName","onUpdate","modeOfPaymentStatusOptions","text","some","Select","options","e","d","mop","accountNumber","ModeOfPaymentDetails","ModeOfPaymentForm","setModefPayment","modeOfPaymentData","ReportType","getSlotStatusText","slotStatus","Rented","UnderMaintenance","Reserved","Archived","getSlotStatusColor","getPaymentStatusText","paymentStatus","Unpaid","Pending","Approved","Declined","getPaymentStatusColor","getInvoiceStatusText","Paid","PartiallyPaid","getInvoiceStatusColor","Payment","isFetchingPayments","result","invoiceStatus","paymentStatusOptions","invoiceNumber","dueDate","UpdateButton","PaymentDetails","totalAmountPaid","payments","reduce","previousValue","currentValue","businessName","invoiceItems","isApproved","handleApproval","paymentTableColumn","description","payment","imageUrl","Daily","selectedReportType","setSelectedReportType","Date","toDateString","selectedDate","setSelectedDate","reportOptions","Weekly","Monthly","Yearly","selected","dateFormat","quantity","paid","unpaid","slotStatusOptions","size","price","SlotDetails","contract","isActive","tenantUniqueId","FormSelectInput","helpers","clearable","setValue","onBlur","setTouched","SlotForm","tenantContract","setSlot","slotDetails","isFetchingTenants","tenantStatusOptions","FormDateInput","setFieldValue","useFormikContext","futureDate","currentDate","year","getFullYear","month","getMonth","day","getDate","TenantForm","slotId","slotsLoaded","setSlotsLoaded","contact","startDate","endDate","setTenant","tenantDetails","slotsData","fetchSlots","prev","placeholderText","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","thumb","border","marginBottom","marginRight","boxSizing","thumbInner","overflow","img","ImageUpload","files","onDrop","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","preview","forEach","URL","revokeObjectURL","FunctionalButton","ImageThumbnail","TenantDetails","setFiles","isLoadingPhotos","setIsLoadingPhotos","handleDeleteContractPhoto","upload","handleTerminateTenantContract","acceptedFiles","Object","assign","createObjectURL","User","isFetchingUsers","join","UserDetails","canEdit","email","UserForm","updtEvalidationSchema","App","useLocation","setLoading","initApp","useCallback","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CustomRouter","location","setState","listen","navigationType","navigator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72e20b0a.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { ICreateTenantInput } from '../models/tenant';\nimport { store } from '../store/configureStore';\nimport history from '../utils/history';\n\naxios.defaults.baseURL = 'https://fast-badlands-66183.herokuapp.com/api/';\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use((config) => {\n  const token = store.getState().account.user?.token;\n  if (token) config.headers!.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n      case 400:\n        if (data.errors) {\n          const modelStateErrors: string[] = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modelStateErrors.push(data.errors[key]);\n              toast.error(data.errors[key][0]);\n            }\n          }\n          throw modelStateErrors.flat();\n        }\n        \n        if(data.title)\n        toast.error(data.title);\n        else\n        toast.error(data);\n        break;\n      case 401:\n        toast.error(data.title || 'Unauthorized');\n        break;\n      case 500:\n        toast.error('Server error');\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nconst request = {\n  get: (url: string) => axios.get(url).then(responseBody),\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n  delete: (url: string) => axios.delete(url).then(responseBody),\n  fileUpload: (url: string, body: {}) => axios.post(url, body, { headers: { 'Content-Type': 'multipart/form-data' }})\n};\n\nconst Account = {\n  login: (values: any) => request.post('account/login', values),\n  register: (values: any) => request.post('account/register', values),\n  currentUser: () => request.get('account/currentUser'),\n};\n\nconst Announcement = {\n  list: () => request.get('announcements'),\n  details: (id: string) => request.get(`announcements/${id}`),\n  create: (values: any) => request.post('announcements', values),\n  update: (values: any) => request.put('announcements', values),\n  delete: (id: string) => request.delete(`announcements/${id}`),\n};\n\nconst Dashboard = {\n  list: () => request.get('dashboard')\n}\n\nconst Invoice = {\n  list: () => request.get('invoices'),\n  details: (id: string) => request.get(`invoices/${id}`),\n  create: (values: any) => request.post('invoices', values),\n  update: (values: any) => request.put('invoices', values),\n  updatePaymentStatus: (values: any) => request.put('invoices/update-payment-status', values)\n};\n\nconst ModeOfPayment = {\n  list: () => request.get('modeofpayments'),\n  details: (id: string) => request.get(`modeofpayments/${id}`),\n  create: (values: any) => request.post('modeofpayments', values),\n  update: (values: any) => request.put('modeofpayments', values),\n  delete: (id: string) => request.delete(`modeofpayments/${id}`),\n};\n\nconst Slot = {\n  list: () => request.get('slots'),\n  details: (id: string) => request.get(`slots/${id}`),\n  create: (values: any) => request.post('slots', values),\n  update: (values: any) => request.put('slots', values),\n  delete: (id: string) => request.delete(`slots/${id}`),  \n};\n\nconst Tenant = {\n  list: () => request.get('tenants'),\n  details: (id: string) => request.get(`tenants/${id}`),\n  create: (values: ICreateTenantInput) => request.post('tenants', values),\n  update: (values: any) => request.put('tenants', values),\n  getContractPhotos: (id: string) => request.get(`tenants/get-contract-photo/${id}`),\n  uploadContract: (values: any) => {\n    const bodyFormData = new FormData();\n    bodyFormData.append('id', values.id);\n    bodyFormData.append('file', values.file);\n    return request.fileUpload('tenants/upload-contract-photo', bodyFormData)\n  },\n  deleteTenantContractPhoto: (id: string) => request.delete(`tenants/delete-contract-photo/${id}`),\n  terminateTenantContract: (id: string) => request.delete(`tenants/terminate-contract/${id}`),\n  slotTenants: (id: string) => request.get(`tenants/get-tenants-by-slot/${id}`)\n};\n\nconst Users = {\n  list: () => request.get('users'),\n  details: (id: string) => request.get(`users/${id}`),\n  create: (values: any) => request.post('users/add-user', values),\n  update: (values: any) => request.put('users', values),\n  updatePassword: (values: any) => request.put('users/update-password', values),\n  delete: (id: string) => request.delete(`users/${id}`),\n}\n\nconst Report = {\n  getInvoiceReport: (values: any) => request.get(`reports?reportType=${values.reportType ?? ''}&date=${values.date ?? ''}`)\n}\n\nconst agent = {\n  Account,\n  Announcement,\n  Dashboard,\n  ModeOfPayment,\n  Invoice,\n  Slot,\n  Tenant,\n  Users,\n  Report\n};\n\nexport default agent;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport agent from \"../../app/api/agent\";\nimport { IUser } from \"../../app/models/user\";\nimport { toast } from \"react-toastify\";\nimport history from \"../../app/utils/history\";\n\ninterface AccountState {\n  user: IUser | null;\n}\n\nconst initialState: AccountState = {\n  user: null\n}\n\nexport const signInUserAsync = createAsyncThunk<IUser, FieldValues>(\n  'account/signInUserAsync',\n  async (data, thunkAPI) => {\n    try {\n      const user = await agent.Account.login(data);\n      localStorage.setItem('user', JSON.stringify(user));\n      return user;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchCurrentUserAsync = createAsyncThunk<IUser>(\n  'account/fetchCurrentUserAsync',\n  async (_, thunkAPI) => {\n    thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\n    try {\n      const user = await agent.Account.currentUser();\n      localStorage.setItem('user', JSON.stringify(user));\n      return user;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  },\n  {\n    condition: () => {\n      if (!localStorage.getItem('user')) return false;\n    }\n  }\n)\n\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    signOut: (state) => {\n      state.user = null;\n      localStorage.removeItem('user');\n      history.push('/login');\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    }\n  },\n  extraReducers: (builder => {\n    builder.addCase(fetchCurrentUserAsync.rejected, (state) => {\n      state.user = null;\n      localStorage.removeItem('user');\n      toast.error('Session expired - please login again');\n      history.push('/login');\n    })\n    builder.addMatcher(isAnyOf(signInUserAsync.fulfilled, fetchCurrentUserAsync.fulfilled), (state, action) => {\n      state.user = action.payload;\n    });\n    builder.addMatcher(isAnyOf(signInUserAsync.rejected), (state, action) => {\n      console.log(action.payload);\n    });\n\n  })\n})\n\nexport const {signOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { IAnnouncement } from \"../../app/models/announcement\";\n\nexport interface IAnnouncementState {\n  announcements: IAnnouncement[];\n  announcement?: IAnnouncement;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: IAnnouncementState = {\n  announcements: [],\n  isFetching: false,\n  announcement: undefined,\n  isFetchingDetails: false,\n  isSaving: false\n}\n\nexport const fetchAnnouncementsAsync = createAsyncThunk<IAnnouncement[]>(\n  'announcements/fetchAnnouncementsAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Announcement.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchAnnouncementDetailsAsync = createAsyncThunk<IAnnouncement, string>(\n  'announcements/fetchAnnouncementDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Announcement.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const createAnnouncementAsync = createAsyncThunk<IAnnouncement, IAnnouncement>(\n  \"announcements/createAnnouncementAsync\", \n  async (announcement, thunkAPI) => {\n    try {\n      return await agent.Announcement.create(announcement);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateAnnouncementDetailsAsync = createAsyncThunk<IAnnouncement, IAnnouncement>(\n  'announcements/updateAnnouncementDetailsAsync',\n  async (announcement, thunkAPI) => {\n    try {\n      return await agent.Announcement.update(announcement);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const deleteAnnouncementDetailsAsync = createAsyncThunk<IAnnouncement, string>(\n  'announcements/deleteAnnouncementDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Announcement.delete(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const announcementSlice = createSlice({\n  name: 'announcement',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchAnnouncementsAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchAnnouncementsAsync.fulfilled, (state, action) => {\n      state.announcements = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchAnnouncementsAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n    builder.addCase(fetchAnnouncementDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchAnnouncementDetailsAsync.fulfilled, (state, action) => {\n      state.announcement = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchAnnouncementDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n\n\n    builder.addCase(createAnnouncementAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createAnnouncementAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(createAnnouncementAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateAnnouncementDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateAnnouncementDetailsAsync.fulfilled, (state, action) => {\n      state.announcement = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateAnnouncementDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(deleteAnnouncementDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(deleteAnnouncementDetailsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(deleteAnnouncementDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n  })\n})\n\nexport const { } = announcementSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { IDashboard } from \"../../app/models/dashboard\";\n\nexport interface IDashboardState {\n  dashboard?: IDashboard;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: IDashboardState = {\n  dashboard: undefined,\n  isFetching: false,\n  isFetchingDetails: false,\n  isSaving: false\n}\n\nexport const fetchDashboardAsync = createAsyncThunk<IDashboard>(\n  'dashboard/fetchDashboardAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Dashboard.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchDashboardAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchDashboardAsync.fulfilled, (state, action) => {\n      state.dashboard = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchDashboardAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n  })\n})\n\nexport const { } = dashboardSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { IInvoice, IUpdatePaymentStatusModel } from \"../../app/models/invoice\";\n\nexport interface IInvoiceState {\n  invoices: IInvoice[];\n  invoice?: IInvoice;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: IInvoiceState = {\n  invoices: [],\n  isFetching: false,\n  invoice: undefined,\n  isFetchingDetails: false,\n  isSaving: false\n}\n\nexport const fetchInvoicesAsync = createAsyncThunk<IInvoice[]>(\n  'invoice/fetchInvoicessAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Invoice.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchInvoiceDetailsAsync = createAsyncThunk<IInvoice, string>(\n  'invoice/fetchInvoiceDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Invoice.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\n\nexport const createInvoiceAsync = createAsyncThunk<IInvoice, IInvoice>(\n  \"invoice/createInvoiceAsync\", \n  async (invoice, thunkAPI) => {\n    try {\n      return await agent.Invoice.create(invoice);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateInvoiceDetailsAsync = createAsyncThunk<IInvoice, IInvoice>(\n  'invoice/updateInvoiceDetailsAsync',\n  async (invoice, thunkAPI) => {\n    try {\n      return await agent.Invoice.update(invoice);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\n\nexport const updateInvoicePaymentStatusAsync = createAsyncThunk<any, IUpdatePaymentStatusModel>(\n  'invoice/updateInvoicePaymentStatusAsync',\n  async (model, thunkAPI) => {\n    try {\n      return await agent.Invoice.updatePaymentStatus(model);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchInvoicesAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchInvoicesAsync.fulfilled, (state, action) => {\n      state.invoices = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchInvoicesAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n    builder.addCase(fetchInvoiceDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.fulfilled, (state, action) => {\n      state.invoice = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n\n\n    builder.addCase(createInvoiceAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createInvoiceAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(createInvoiceAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateInvoiceDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateInvoiceDetailsAsync.fulfilled, (state, action) => {\n      state.invoice = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateInvoiceDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateInvoicePaymentStatusAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateInvoicePaymentStatusAsync.fulfilled, (state, action) => {\n      state.invoice = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateInvoicePaymentStatusAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n  })\n})\n\nexport const {  } = invoiceSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { IModeOfPayment } from \"../../app/models/modeOfPayment\";\n\nexport interface IModeOfPaymentState {\n  modeOfPayments: IModeOfPayment[];\n  modeOfPayment?: IModeOfPayment;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: IModeOfPaymentState = {\n  modeOfPayments: [],\n  isFetching: false,\n  modeOfPayment: undefined,\n  isFetchingDetails: false,\n  isSaving: false\n}\n\nexport const fetchModeOfPaymentsAsync = createAsyncThunk<IModeOfPayment[]>(\n  'modeOfPayments/fetchModeOfPaymentsAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.ModeOfPayment.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchModeOfPaymentDetailsAsync = createAsyncThunk<IModeOfPayment, string>(\n  'modeOfPayments/fetchModeOfPaymentDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.ModeOfPayment.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const createModeOfPaymentAsync = createAsyncThunk<IModeOfPayment, IModeOfPayment>(\n  'modeOfPayments/createModeOfPaymentAsync',\n  async (modeOfPayment, thunkAPI) => {\n    try {\n      return await agent.ModeOfPayment.create(modeOfPayment);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateModeOfPaymentDetailsAsync = createAsyncThunk<IModeOfPayment, IModeOfPayment>(\n  'modeOfPayments/updateModeOfPaymentDetailsAsync',\n  async (modeOfPayment, thunkAPI) => {\n    try {\n      return await agent.ModeOfPayment.update(modeOfPayment);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const deleteModeOfPaymentDetailsAsync = createAsyncThunk<IModeOfPayment, string>(\n  'modeOfPayments/deleteModeOfPaymentDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.ModeOfPayment.delete(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const modeOfPaymentSlice = createSlice({\n  name: 'modeOfPayment',\n  initialState,\n  reducers: {\n    updateStatus: (state, action) => {\n      state.modeOfPayments = [...state.modeOfPayments].map(i => {\n        if (i.id === action.payload.id) {\n          i.isEnabled = !i.isEnabled;\n        }\n        return i;\n      })\n    }\n  },\n\n  extraReducers: (builder => {\n    builder.addCase(fetchModeOfPaymentsAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchModeOfPaymentsAsync.fulfilled, (state, action) => {\n      state.modeOfPayments = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchModeOfPaymentsAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n    \n    \n    builder.addCase(fetchModeOfPaymentDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchModeOfPaymentDetailsAsync.fulfilled, (state, action) => {\n      state.modeOfPayment = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchModeOfPaymentDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n\n    \n    builder.addCase(createModeOfPaymentAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createModeOfPaymentAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(createModeOfPaymentAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateModeOfPaymentDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateModeOfPaymentDetailsAsync.fulfilled, (state, action) => {\n      state.modeOfPayment = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateModeOfPaymentDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(deleteModeOfPaymentDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(deleteModeOfPaymentDetailsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(deleteModeOfPaymentDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n  })\n})\n\nexport const { updateStatus } = modeOfPaymentSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { ISlot } from \"../../app/models/slot\";\nimport { ITenant } from \"../../app/models/tenant\";\n\nexport interface ISlotState {\n  slots: ISlot[];\n  slot?: ISlot;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n  tenants: ITenant[];\n}\n\nconst initialState: ISlotState = {\n  slots: [],\n  isFetching: false,\n  slot: undefined,\n  isFetchingDetails: false,\n  isSaving: false,\n  tenants: []\n}\n\nexport const fetchSlotsAsync = createAsyncThunk<ISlot[]>(\n  'slots/fetchSlotsAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Slot.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchSlotDetailsAsync = createAsyncThunk<ISlot, string>(\n  'slots/fetchSlotDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Slot.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const createSlotAsync = createAsyncThunk<ISlot, ISlot>(\n  \"slots/createSlotAsync\", \n  async (slot, thunkAPI) => {\n    try {\n      return await agent.Slot.create(slot);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateSlotDetailsAsync = createAsyncThunk<ISlot, ISlot>(\n  'slot/updateSlotDetailsAsync',\n  async (slot, thunkAPI) => {\n    try {\n      return await agent.Slot.update(slot);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const deleteSlotDetailsAsync = createAsyncThunk<ISlot, string>(\n  'slot/deleteSlotDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Slot.delete(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchSlotTanantsAsync = createAsyncThunk<ITenant[], string>(\n  'slot/fetchSlotTanantsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Tenant.slotTenants(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const slotSlice = createSlice({\n  name: 'slot',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchSlotsAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchSlotsAsync.fulfilled, (state, action) => {\n      state.slots = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchSlotsAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n    builder.addCase(fetchSlotDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchSlotDetailsAsync.fulfilled, (state, action) => {\n      state.slot = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchSlotDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n\n\n    builder.addCase(createSlotAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createSlotAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(createSlotAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n    \n    \n    builder.addCase(updateSlotDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateSlotDetailsAsync.fulfilled, (state, action) => {\n      state.slot = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateSlotDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n  \n    builder.addCase(deleteSlotDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(deleteSlotDetailsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(deleteSlotDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n    \n    builder.addCase(fetchSlotTanantsAsync.pending, (state, action) => {\n    });\n    builder.addCase(fetchSlotTanantsAsync.fulfilled, (state, action) => {\n      state.tenants = action.payload;\n    });\n    builder.addCase(fetchSlotTanantsAsync.rejected, (state, action) => {\n    });\n  })\n})\n\nexport const {  } = slotSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { ICreateTenantInput, ITenant, IUpdateTenantInput } from \"../../app/models/tenant\";\nimport { IContractPhotos, ITenantContractPhotoInput } from \"../../app/models/tenantContract\";\n\nexport interface ITenantState {\n  tenants: ITenant[];\n  isFetching: boolean;\n  tenant?: ITenant;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n  isFetchingPhotos: boolean;\n  contractPhotos: IContractPhotos[]\n}\n\nconst initialState: ITenantState = {\n  tenants: [],\n  isFetching: false,\n  tenant: undefined,\n  isFetchingDetails: false,\n  isSaving: false,\n  contractPhotos:[],\n  isFetchingPhotos: false\n}\n\nexport const fetchTenantsAsync = createAsyncThunk<ITenant[]>(\n  'tenants/fetchTanantsAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Tenant.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchTenantDetailsAsync = createAsyncThunk<ITenant, string>(\n  'tenants/fetchTenantDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Tenant.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const createTenantsAsync = createAsyncThunk<ITenant, ICreateTenantInput>(\n  'tenants/createTenantsAsync',\n  async (tenant, thunkAPI) => {\n    try {\n      return await agent.Tenant.create(tenant);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateTenantDetailsAsync = createAsyncThunk<ITenant, IUpdateTenantInput>(\n  'tenants/updateTenantDetailsAsync',\n  async (tenant, thunkAPI) => {\n    try {\n      return await agent.Tenant.update(tenant);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\n// Contract Photo\nexport const uploadTenantContractPhoto = createAsyncThunk<any, ITenantContractPhotoInput>(\n  'tenants/uploadTenantContractPhoto',\n  async (model, thunkAPI) => {\n    try {\n      return await agent.Tenant.uploadContract(model);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const getTenantContractPhoto = createAsyncThunk<any, string>(\n  'tenants/getTenantContractPhoto',\n  async (model, thunkAPI) => {\n    try {\n      return await agent.Tenant.getContractPhotos(model);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const deleteTenantContractPhoto = createAsyncThunk<any, string>(\n  '/tenants/deleteTenantContractPhoto',\n  async (id, trunkApi) => {\n    try{\n      return await agent.Tenant.deleteTenantContractPhoto(id);\n    } catch(error: any) {\n      return trunkApi.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const terminateTenantContract = createAsyncThunk<any, string>(\n  '/tenants/terminateTenantContract',\n  async (id, trunkApi) => {\n    try{\n      return await agent.Tenant.terminateTenantContract(id);\n    } catch(error: any) {\n      return trunkApi.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const tenantSlice = createSlice({\n  name: 'tenant',\n  initialState,\n  reducers: {\n  },\n  extraReducers: (builder => {\n    builder.addCase(fetchTenantsAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchTenantsAsync.fulfilled, (state, action) => {\n      state.tenants = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchTenantsAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n    builder.addCase(fetchTenantDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchTenantDetailsAsync.fulfilled, (state, action) => {\n      state.tenant = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchTenantDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n    \n    \n    builder.addCase(createTenantsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createTenantsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(createTenantsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(getTenantContractPhoto.pending, (state, action) => {\n      state.isFetchingPhotos = true;\n    });\n\n    builder.addCase(getTenantContractPhoto.fulfilled, (state, action) => {\n      state.contractPhotos = action.payload;\n      state.isFetchingPhotos = false;\n    });\n    \n    builder.addCase(getTenantContractPhoto.rejected, (state, action) => {\n      state.isFetchingPhotos = false;\n    });\n\n    builder.addCase(deleteTenantContractPhoto.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(deleteTenantContractPhoto.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(deleteTenantContractPhoto.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n    builder.addCase(terminateTenantContract.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(terminateTenantContract.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(terminateTenantContract.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n  })\n})\n\nexport const { } = tenantSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { IApplicationUser, ICreateUserInput, IUpdateUserInput, IUpdateUserPasswordInput, IUser } from \"../../app/models/user\";\n\nexport interface IUserState {\n  users: IApplicationUser[];\n  user?: IApplicationUser;\n  isFetching: boolean;\n  isFetchingDetails: boolean;\n  isSaving: boolean;\n}\n\nconst initialState: IUserState = {\n  users: [],\n  user: undefined,\n  isFetching: false,\n  isFetchingDetails: false,\n  isSaving: false\n}\n\nexport const fetchUsersAsync = createAsyncThunk<IApplicationUser[]>(\n  'users/fetchUserssAsync',\n  async (_, thunkAPI) => {\n    try {\n      return await agent.Users.list();\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchUserDetailsAsync = createAsyncThunk<IApplicationUser, string>(\n  'users/fetchUserDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Users.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const createUserAsync = createAsyncThunk<IApplicationUser, ICreateUserInput>(\n  \"users/createUserAsync\", \n  async (user, thunkAPI) => {\n    try {\n      return await agent.Users.create(user);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateUserDetailsAsync = createAsyncThunk<IApplicationUser, IUpdateUserInput>(\n  'users/updateUserDetailsAsync',\n  async (user, thunkAPI) => {\n    try {\n      return await agent.Users.update(user);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateUserPasswordAsync = createAsyncThunk<IUser, IUpdateUserPasswordInput>(\n  'users/updateUserPasswordAsync',\n  async (user, thunkAPI) => {\n    try {\n      return await agent.Users.updatePassword(user);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const deleteUserDetailsAsync = createAsyncThunk<IUser, string>(\n  'users/deleteUserDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Users.delete(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchUsersAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchUsersAsync.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchUsersAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n    builder.addCase(fetchUserDetailsAsync.pending, (state, action) => {\n      state.isFetchingDetails = true;\n    });\n    builder.addCase(fetchUserDetailsAsync.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isFetchingDetails = false;\n    });\n    builder.addCase(fetchUserDetailsAsync.rejected, (state, action) => {\n      state.isFetchingDetails = false;\n    });\n\n\n    builder.addCase(createUserAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createUserAsync.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(createUserAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateUserDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateUserDetailsAsync.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(updateUserDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(deleteUserDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(deleteUserDetailsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(deleteUserDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n\n\n    builder.addCase(updateUserPasswordAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(updateUserPasswordAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n    });\n    builder.addCase(updateUserPasswordAsync.rejected, (state, action) => {\n      state.isSaving = false;\n    });\n  })\n})\n\nexport const { } = userSlice.actions;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../../app/api/agent\";\nimport { IInvoiceReport, IInvoiceReportInput } from \"../../app/models/report\";\n\nexport interface IReportState {\n  report?: IInvoiceReport;\n  isFetching: boolean;\n}\n\nconst initialState: IReportState = {\n  report: undefined,\n  isFetching: false\n}\n\nexport const fetchInvoiceReportAsync = createAsyncThunk<IInvoiceReport, IInvoiceReportInput>(\n  'report/fetchInvoiceReportAsync',\n  async (values, thunkAPI) => {\n    try {\n      return await agent.Report.getInvoiceReport(values);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const reportSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n    builder.addCase(fetchInvoiceReportAsync.pending, (state, action) => {\n      state.isFetching = true;\n    });\n    builder.addCase(fetchInvoiceReportAsync.fulfilled, (state, action) => {\n      state.report = action.payload;\n      state.isFetching = false;\n    });\n    builder.addCase(fetchInvoiceReportAsync.rejected, (state, action) => {\n      state.isFetching = false;\n    });\n\n    \n  })\n})\n\nexport const { } = reportSlice.actions;","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { announcementSlice } from \"../../features/announcement/announcementSlice\";\nimport { dashboardSlice } from \"../../features/dashboard/DashboardSlice\";\nimport { invoiceSlice } from \"../../features/payment/invoiceSlice\";\nimport { modeOfPaymentSlice } from \"../../features/modeOfPayment/modeOfPaymentSlice\";\nimport { slotSlice } from \"../../features/slot/slotSlice\";\nimport { tenantSlice } from \"../../features/tenant/tenantSlice\";\nimport { userSlice } from \"../../features/user/UserSlice\";\nimport { reportSlice } from \"../../features/report/reportSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    account: accountSlice.reducer,\n    announcement: announcementSlice.reducer,\n    dashboard: dashboardSlice.reducer,\n    invoice: invoiceSlice.reducer,\n    modeOfPayment: modeOfPaymentSlice.reducer,\n    slot: slotSlice.reducer,\n    tenant: tenantSlice.reducer,\n    user: userSlice.reducer,\n    report: reportSlice.reducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelecter: TypedUseSelectorHook<RootState> = useSelector;","import { ITenantContract } from './tenantContract';\n\nexport interface ISlot {\n  id: string;\n  slotNumber: string;\n  size: number;\n  price?: number;\n  status: SlotStatus;\n  tenantContract?: ITenantContract;\n}\n\nexport enum SlotStatus {\n  Available = 0,\n  Rented = 1,\n  UnderMaintenance = 2,\n  Reserved = 3,\n  Archived = 4\n}","import { Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n    name: string\n    icon: React.ReactNode\n    navigateTo: string\n    onClick?: () => void\n}\n\nconst NavMenuItem = ({ name, icon, navigateTo, onClick = () => { } }: Props) => {\n    return (\n        <Nav.Link\n            onClick={onClick}\n            className=\"navMenu__text navMenu__text--hover d-flex text-light align-items-center px-4 w-100 my-1\"\n            as={Link}\n            to={navigateTo}>\n            {icon}\n            {name}\n        </Nav.Link>\n    )\n}\n\nexport default NavMenuItem;","import { Nav } from \"react-bootstrap\";\n\nimport AccessibilityNewOutlinedIcon from '@mui/icons-material/AccessibilityNewOutlined';\nimport AccountBoxOutlinedIcon from '@mui/icons-material/AccountBoxOutlined';\nimport AssessmentOutlinedIcon from '@mui/icons-material/AssessmentOutlined';\nimport CampaignOutlinedIcon from '@mui/icons-material/CampaignOutlined';\nimport DashboardCustomizeOutlinedIcon from '@mui/icons-material/DashboardCustomizeOutlined';\nimport LocationOnOutlinedIcon from '@mui/icons-material/LocationOnOutlined';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\nimport StorefrontOutlinedIcon from '@mui/icons-material/StorefrontOutlined';\nimport PaymentOutlinedIcon from '@mui/icons-material/PaymentOutlined';\nimport PointOfSaleOutlinedIcon from '@mui/icons-material/PointOfSaleOutlined';\n\nimport NavMenuItem from \"./NavMenuItem\";\nimport \"./navMenu.scss\"\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { signOut } from \"../account/accountSlice\";\n\nconst NavMenu = () => {\n\n    const account = useAppSelecter(state => state.account);\n    const dispatch = useAppDispatch();\n    return (\n        <Nav className=\"navMenu flex-column vh-100\" defaultActiveKey=\"/home\">\n\n            <Nav.Link className=\"navMenu__title text-light px-4 d-flex align-items-center\" href=\"/\">MaxiMarket</Nav.Link>\n\n            <NavMenuItem\n                name=\"Dashboard\"\n                icon={<DashboardCustomizeOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/\"\n            />\n            {\n                !!account.user && !!account.user?.roles && account.user?.roles.every(i => i.toLowerCase() !== \"admin\") &&\n                <NavMenuItem\n                    name=\"Users\"\n                    icon={<PersonOutlinedIcon className=\"me-2\" />}\n                    navigateTo=\"/users\"\n                />\n            }\n            <NavMenuItem\n                name=\"Locator\"\n                icon={<LocationOnOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/map\"\n            />\n\n            <NavMenuItem\n                name=\"Slots\"\n                icon={<StorefrontOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/slots\"\n            />\n\n            <NavMenuItem\n                name=\"Tenants\"\n                icon={<AccessibilityNewOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/tenants\"\n            />\n\n            <NavMenuItem\n                name=\"Invoices\"\n                icon={<PointOfSaleOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/invoices\"\n            />\n\n            <NavMenuItem\n                name=\"Mode of Payments\"\n                icon={<PaymentOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/mode-of-payments\"\n            />\n\n            <NavMenuItem\n                name=\"Announcements\"\n                icon={<CampaignOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/announcements\"\n            />\n\n            <NavMenuItem\n                name=\"Reports\"\n                icon={<AssessmentOutlinedIcon className=\"me-2\" />}\n                navigateTo=\"/reports\"\n            />\n\n            <div style={{ position: \"absolute\", bottom: 0 }}>\n                <NavMenuItem\n                    name=\"Account\"\n                    icon={<AccountBoxOutlinedIcon className=\"me-2\" />}\n                    navigateTo=\"/account\"\n                />\n\n                <NavMenuItem\n                    name=\"Logout\"\n                    onClick={() => dispatch(signOut())}\n                    icon={<LogoutOutlinedIcon className=\"me-2\" />}\n                    navigateTo=\"/\"\n                />\n            </div>\n\n\n        </Nav>\n    );\n}\n\nexport default NavMenu;","import { Col, Row } from 'react-bootstrap';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport NavMenu from '../../../features/navMenu/NavMenu';\nimport { useAppSelecter } from '../../store/configureStore';\n\nconst PrivateLayout = () => {\n  return <Row className=\"vh-100\">\n    <Col className=\"app__navigation p-0\" lg={2} >\n      <NavMenu />\n    </Col>\n    <Col className=\"app__content p-0\">\n      <Outlet></Outlet>\n    </Col>\n  </Row>\n}\nexport const PrivateRoute: React.FC = ({ }) => {\n  const { user } = useAppSelecter(state => state.account);\n  return !!user ? <PrivateLayout /> : <Navigate to=\"/login\" />\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Button } from 'semantic-ui-react';\nimport \"./button.scss\"\n\ninterface Props {\n    title?: string,\n    loading?: boolean\n    disabled: boolean,\n}\n\nconst AddButton: React.FC<Props> = ({ title, loading, disabled }) => {\n    return (\n\n        <Button\n            className=\"button__primary\"\n            type=\"submit\"\n            content={title ? title : \"Submit\"}\n            loading={loading}\n            disabled={disabled}\n        />\n    );\n}\n\nexport default AddButton;","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Button } from 'semantic-ui-react';\nimport ModeEditOutlineOutlinedIcon from '@mui/icons-material/ModeEditOutlineOutlined';\n\ninterface Props {\n    children: React.ReactNode\n}\n\nconst FormButtonContainer: React.FC<Props> = ({ children }) => {\n    return (\n        <Row className='py-3'>\n            <Col lg={2}></Col>\n\n            <Col>\n                {children}\n            </Col>\n        </Row>\n\n\n    );\n}\n\nexport default FormButtonContainer;","import { useField } from \"formik\";\nimport { Col, FormLabel, Row } from \"react-bootstrap\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string\n    name: string\n    label?: string\n    type?: string\n}\n\nconst FormTextInput = (props: Props) => {\n\n    const [field, meta] = useField(props.name)\n\n    return (\n        <Row className=\"mb-3\">\n            <Col lg={2}>\n                <FormLabel className=\"form__label\">{props.label}</FormLabel>\n            </Col>\n\n            <Col>\n                <Form.Field className=\"form__input\" error={meta.touched && !!meta.error}>\n                    <input {...field} {...props} />\n                </Form.Field>\n\n                {\n                    meta.touched && meta.error ?\n                        (\n                            <Label className=\"my-1\" basic color=\"red\">{meta.error}</Label>\n                        ) :\n                        null\n                }\n            </Col>\n        </Row>\n    );\n}\n\nexport default FormTextInput;\n\n\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport './item.scss'\n\ninterface Props {\n    title: string,\n    value: any,\n    space?: number\n}\n\nconst DetailItem: React.FC<Props> = ({ title, value, space }) => {\n    return (\n        <Row className=\"my-3\">\n            <Col className=\"item__title\" lg={!!space ? space : 2}>{title}</Col>\n\n            {/* <Col className=\"item__title\" lg={!!rightText ? 9 : 3}>{title}</Col> */}\n\n            <Col>{value}</Col>\n        </Row>\n    );\n}\n\nexport default DetailItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport MenuOpenOutlinedIcon from '@mui/icons-material/MenuOpenOutlined';\nimport './page.scss'\n\n\ninterface Props {\n    title?: string,\n    backNavigationLink?: string\n    content: React.ReactNode\n}\n\nconst DetailsPage: React.FC<Props> = ({ title, backNavigationLink, content }) => {\n    return (\n        <div>\n            {\n                backNavigationLink &&\n                <Button className=\"page d-flex align-items-center px-4 mb-1\" as={Link} to={backNavigationLink}>\n                    <MenuOpenOutlinedIcon />\n                </Button>\n            }\n\n            {\n                title && <h4 className=\"page__title d-flex align-items-center px-4 mb-3\">{title}</h4>\n\n            }\n\n            <div className=\"page__container px-5 py-4 mx-5 my-4\">\n                {content}\n            </div>\n\n        </div >\n    );\n}\n\nexport default DetailsPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport MenuOpenOutlinedIcon from '@mui/icons-material/MenuOpenOutlined';\nimport './page.scss'\n\ninterface Props {\n    backNavigationLink?: string\n    title?: string\n    form: React.ReactNode,\n}\n\nconst FormPage: React.FC<Props> = ({ backNavigationLink, title, form }) => {\n    return (\n        <div className=\"mb-5\">\n            {\n                backNavigationLink &&\n                <Button className=\"page d-flex align-items-center px-4 mb-2\" as={Link} to={backNavigationLink}>\n                    <MenuOpenOutlinedIcon />\n                </Button>\n            }\n\n            {\n                title &&\n                <h3 className=\"page__title w-100 d-flex align-items-center px-4 mb-2\">\n                    {title}\n                </h3>\n            }\n\n            <div className=\"page__container px-5 py-4 mx-5\">\n                {form}\n            </div>\n        </div>\n    );\n}\n\nexport default FormPage;","import { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n    inverted?: boolean;\n    content: string\n}\n\nconst LoadingComponent = ({ inverted = true, content = \"Loading...\" }: Props) => {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}></Loader>\n        </Dimmer>\n    );\n}\n\nexport default LoadingComponent;","import { Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AddButton from '../../app/layouts/components/buttons/AddButton';\nimport FormButtonContainer from '../../app/layouts/components/form/FormButtonContainer';\nimport FormTextInput from '../../app/layouts/components/form/FormTextInput';\nimport DetailItem from '../../app/layouts/components/items/DetailItem';\nimport DetailsPage from '../../app/layouts/components/pages/DetailsPage';\nimport FormPage from '../../app/layouts/components/pages/FormPage';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport { fetchUserDetailsAsync, updateUserPasswordAsync } from '../user/UserSlice';\nimport * as Yup from 'yup';\nimport LoadingComponent from '../../app/layouts/components/loading/LoadingComponent';\nimport { Message } from 'semantic-ui-react';\nimport history from '../../app/utils/history';\nimport { fetchCurrentUserAsync } from './accountSlice';\nimport { previousDay } from 'date-fns';\n\nconst Account = () => {\n    const [password, setPassword] = useState(\n        { newPassword: \"\", verifyPassword: \"\" }\n    )\n    const [showPasswordNotMatchError, setShowPasswordNotMatchError] = useState(false);\n    const { user } = useAppSelecter(state => state.account);\n    const { user: userData, isFetchingDetails, isSaving } = useAppSelecter(state => state.user);\n    const dispatch = useAppDispatch();\n\n    const getCurrentUser = async () => {\n        if (!!user && !!user.id) await dispatch(fetchUserDetailsAsync(user.id))\n    }\n\n    useEffect(() => {\n        getCurrentUser()\n    }, [user?.id])\n\n    const validationSchema = Yup.object(\n        {\n            newPassword: Yup.string().min(6).required(\"New password is required.\"),\n            verifyPassword: Yup.string().min(6).required(\"Verify password is required.\"),\n        }\n    )\n\n    const onSubmit = async (values: any) => {\n        const { newPassword, verifyPassword } = values\n\n        if (newPassword != verifyPassword) {\n            setShowPasswordNotMatchError(true);\n            return;\n        }\n\n        await dispatch(updateUserPasswordAsync({ id: userData?.id!, password: newPassword }));\n        setPassword({ newPassword: \"\", verifyPassword: \"\" })\n    }\n\n    if (isFetchingDetails && !userData) return (<LoadingComponent content=\"Loading announcements...\" />)\n\n    return (\n        <>\n            <DetailsPage\n                title='Account'\n                content={\n                    <>\n                        <DetailItem title=\"Username\" value={userData?.username} />\n                        <DetailItem title=\"First Name\" value={userData?.firstName} />\n                        <DetailItem title=\"Last Name\" value={userData?.lastName} />\n                        <DetailItem title=\"Contact Number\" value={userData?.phone} />\n                        <DetailItem title=\"Address\" value={userData?.address} />\n                    </>\n                }\n            />\n\n            <FormPage\n                title=\"Change Password\"\n                form={\n                    <>\n                        {showPasswordNotMatchError && <Message>Password and new password must be the same.</Message>}\n                        <Formik\n                            validationSchema={validationSchema}\n                            initialValues={password}\n                            enableReinitialize={true}\n                            onSubmit={values => onSubmit(values)}>\n                            {\n                                ({ handleSubmit, isValid }) => (\n                                    <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n                                        <FormTextInput type=\"password\" label=\"New Password\" name=\"newPassword\" placeholder=\"Password\" />\n                                        <FormTextInput type=\"password\" label=\"Verify Password\" name=\"verifyPassword\" placeholder=\"Verify Password\" />\n                                        <FormButtonContainer>\n                                            <AddButton loading={isSaving} disabled={!isValid} />\n                                        </FormButtonContainer>\n                                    </Form>\n                                )\n                            }\n                        </Formik>\n                    </>\n                }\n            />\n        </>\n\n    );\n}\n\nexport default Account;","import React from 'react';\nimport './page.scss'\n\ninterface Props {\n    title: string,\n    content?: React.ReactNode,\n}\n\nconst MainPage: React.FC<Props> = ({ title, content }) => {\n    return (\n        <div className=\"mb-5\">\n            <h4 className=\"page__title w-100 d-flex align-items-center px-4\">{title}</h4>\n\n            <div className=\"page__container px-5 py-4 mx-5\" >\n                {content}\n            </div>\n        </div >\n    );\n}\n\nexport default MainPage;","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\ninterface CustomTablePaginationProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    newPage: number,\n  ) => void;\n}\n\nconst CustomTablePagination = (props: CustomTablePaginationProps) => {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n\n    </Box>\n  );\n}\n\nexport default CustomTablePagination;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport \"./button.scss\"\n\ninterface Props {\n    title: string\n    navigateTo: string\n}\n\nconst NavigationButton: React.FC<Props> = ({ title, navigateTo }) => {\n    return (\n        <Button className=\"button__primary me-2\" href={navigateTo}>\n            {title}\n        </Button>\n    );\n}\n\nexport default NavigationButton;","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { TableHead } from '@mui/material';\n\nimport CustomTablePagination from './CustomTablePagination';\nimport { Col, Form, Row } from 'react-bootstrap';\nimport NavigationButton from '../buttons/NavigationButton';\n\ninterface CustomTableProps {\n  columns: Array<{ title: string; style?: any }>,\n  rows: JSX.Element[],\n  searchValue?: string,\n  onSearch?: (value: string) => void\n  buttonTitle?: string,\n  navigateTo?: string,\n  tableControls?: React.ReactNode;\n  noPagination?: boolean\n}\n\nconst CustomTable = ({ columns, rows, searchValue, onSearch, buttonTitle, navigateTo, tableControls, noPagination = false }: CustomTableProps) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number,\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      {\n        <Row className=\"d-flex align-items-center justify-content-between py-3 ms-1\">\n          <Col className=\"d-flex align-items-center p-0\" md={3} >\n            {\n              <>\n                {!!onSearch &&\n                  <Form.Control\n                    style={{ height: \"37px\" }}\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={searchValue ?? ''}\n                    onChange={evt => onSearch(evt.target.value)}\n                  />}\n              </>\n            }\n          </Col>\n\n          <Col>\n            {tableControls}\n          </Col>\n\n          {\n            buttonTitle &&\n            <Col className=\"d-flex justify-content-end\">\n              <NavigationButton title={buttonTitle} navigateTo={navigateTo!} />\n            </Col>\n          }\n        </Row >\n      }\n\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 500 }}>\n          <TableHead>\n            <TableRow>\n              {columns.map((column, index) => (\n                <TableCell align=\"center\" key={index} style={{ ...column.style, fontSize: 14 }} >\n                  {column.title}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row) => row)}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n\n          {\n            !noPagination &&\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[10, 15, 25, { label: 'All', value: -1 }]}\n                  colSpan={columns.length}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: {\n                      'aria-label': 'rows per page',\n                    },\n                    native: true,\n                  }}\n                  onPageChange={handleChangePage}\n                  onRowsPerPageChange={handleChangeRowsPerPage}\n                  ActionsComponent={CustomTablePagination}\n                />\n              </TableRow>\n            </TableFooter>\n          }\n\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default CustomTable;","import { useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchAnnouncementsAsync } from \"./announcementSlice\";\nimport moment from \"moment\";\nimport history from '../../app/utils/history';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\n\nconst Announcement = () => {\n    const [searchKey, setSearchKey] = useState('');\n    const { announcements, isFetching: isFetchingAnnouncements } = useAppSelecter(state => state.announcement);\n\n    const dispatch = useAppDispatch();\n\n    const data = useMemo(() => {\n        if (!!searchKey) {\n            return announcements.filter(i => i.title.toLowerCase().includes(searchKey.toLowerCase()));\n        }\n        return announcements;\n    }, [announcements, searchKey])\n\n    useEffect(() => {\n        dispatch(fetchAnnouncementsAsync());\n    }, [])\n\n    const columns = [\n        { title: 'Date Created' },\n        { title: 'Subject' },\n        { title: 'Message' },\n        { title: '' },\n    ]\n\n    if (isFetchingAnnouncements) return <LoadingComponent content=\"Loading announcements...\" />\n\n    return (\n        <MainPage\n            title=\"Announcements\"\n            content={\n                <CustomTable\n                    searchValue={searchKey}\n                    onSearch={(value: string) => setSearchKey(value)}\n                    buttonTitle=\"Announcement\"\n                    navigateTo=\"/announcements/create\"\n                    columns={columns}\n                    rows={\n                        !data.length ?\n                            [\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={columns.length}>No data</TableCell>\n                                </TableRow>\n                            ]\n                            :\n                            data.map(announcement =>\n                                <TableRow key={announcement.id}>\n                                    <TableCell align=\"left\">{moment(announcement.dateCreated).format(\"MMM DD, YYYY\")}</TableCell>\n                                    <TableCell className=\"w-25\" align=\"left\">{announcement.title}</TableCell>\n                                    <TableCell className=\"w-50\" align=\"left\">{announcement.message}</TableCell>\n                                    <TableCell align=\"right\"><NavigateNextOutlinedIcon onClick={() => history.push(`/announcements/${announcement.id}/details`)} /></TableCell>\n                                </TableRow >\n                            )\n                    }\n                />\n            }\n        />\n    );\n}\n\nexport default Announcement;","import moment from 'moment';\n\nexport const currencyFormatter = (amount: number) => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'PHP',\n    maximumFractionDigits: 0,\n  });\n\n  return formatter.format(amount);\n};\n\nexport const dateFormatter = (date: string | undefined) => {\n  return !!date ? moment(date).format('MMM DD, YYYY') : \"-----\";\n};\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport \"./button.scss\"\n\ninterface Props {\n    onClick: () => void\n    loading: boolean\n}\n\nconst DeleteButton: React.FC<Props> = ({ onClick, loading }) => {\n    return (\n        <Button className=\"btn-danger me-2\" color='red' onClick={onClick} loading={loading} disabled={loading}>\n            Delete\n        </Button>\n    );\n}\n\nexport default DeleteButton;","import { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { dateFormatter } from \"../../app/layouts/formatter/common\"\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\"\nimport { deleteAnnouncementDetailsAsync, fetchAnnouncementDetailsAsync, updateAnnouncementDetailsAsync } from \"./announcementSlice\"\nimport history from \"../../app/utils/history\"\n\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\"\nimport DetailsPage from \"../../app/layouts/components/pages/DetailsPage\"\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\"\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\"\nimport NavigationButton from \"../../app/layouts/components/buttons/NavigationButton\"\nimport DeleteButton from \"../../app/layouts/components/buttons/DeleteButton\"\n\nconst AnnouncementDetails = () => {\n    const { announcement, isFetchingDetails, isSaving } = useAppSelecter(state => state.announcement);\n    const dispatch = useAppDispatch();\n\n    const { id } = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if(id) dispatch(fetchAnnouncementDetailsAsync(id));\n    }, [])\n\n    const handleDelete = async () => {\n        if(id) {\n            await dispatch(deleteAnnouncementDetailsAsync(id));\n            history.push('/announcements')\n        }\n    }\n\n    if (isFetchingDetails || !announcement) return (<LoadingComponent content=\"Loading announcement details...\" />)\n\n    const { id: announcementId, dateCreated, title, message } = announcement;\n\n    return (\n        <DetailsPage\n            title=\"Announcement Details\"\n            backNavigationLink=\"/announcements\"\n            content={\n                <>\n                    <DetailItem title=\"Date Created\" value={dateFormatter(dateCreated)} />\n                    <DetailItem title=\"Subject\" value={title} />\n                    <DetailItem title=\"Message\" value={message} />\n                    <FormButtonContainer>\n                        <NavigationButton title=\"Edit\" navigateTo={`/announcements/${announcementId}/manage`} />\n                        <DeleteButton onClick={handleDelete} loading={isSaving} />\n                    </FormButtonContainer>\n                </>\n            }\n        />\n    )\n}\n\nexport default AnnouncementDetails","import { useField } from \"formik\";\nimport { Col, FormLabel, Row } from \"react-bootstrap\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string\n    name: string\n    rows: number\n    label?: string\n}\n\nconst FormTextArea = (props: Props) => {\n\n    const [field, meta] = useField(props.name)\n\n    return (\n        <Row className=\"mb-3\">\n            <Col lg={2}>\n                <FormLabel className=\"form__label\">{props.label}</FormLabel>\n            </Col>\n\n            <Col>\n                <Form.Field className=\"w-100\" error={meta.touched && !!meta.error}>\n                    <textarea {...field} {...props} />\n                </Form.Field>\n                {\n                    meta.touched && meta.error ?\n                        (\n                            <Label className=\"my-1\" basic color=\"red\">{meta.error}</Label>\n                        ) :\n                        null\n                }\n            </Col>\n        </Row>\n    );\n}\n\nexport default FormTextArea;\n\n\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport history from '../../app/utils/history';\nimport { IAnnouncement } from \"../../app/models/announcement\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { createAnnouncementAsync, fetchAnnouncementDetailsAsync, updateAnnouncementDetailsAsync } from \"./announcementSlice\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { Form } from \"semantic-ui-react\";\nimport FormPage from \"../../app/layouts/components/pages/FormPage\";\nimport FormTextInput from \"../../app/layouts/components/form/FormTextInput\";\nimport FormTextArea from \"../../app/layouts/components/form/FormTextArea\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport AddButton from \"../../app/layouts/components/buttons/AddButton\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\n\nconst AnnouncementForm = () => {\n\n    const [announcement, setAnnouncement] = useState<IAnnouncement>(\n        { id: \"\", title: \"\", message: \"\", dateCreated: \"\" }\n    )\n\n    const { announcement: announcementData, isFetchingDetails, isSaving } = useAppSelecter(state => state.announcement);\n    const dispatch = useAppDispatch();\n\n    const { id } = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if (!!id) dispatch(fetchAnnouncementDetailsAsync(id));\n    }, [])\n\n    useEffect(() => {\n        if (id && announcementData) setAnnouncement(announcementData)\n    }, [id, announcementData])\n\n    const validationSchema = Yup.object(\n        {\n            title: Yup.string().required(\"Subject is required.\"),\n            message: Yup.string().required(\"Message is required.\"),\n        }\n    )\n\n    const handleResult = (data: any) => {\n        if (!!data.error) {\n            console.log('error')\n        } else {\n            history.push(`/announcements/${!!id ? id : (data.payload as any).id}/details`)\n        }\n    }\n\n    const onSubmit = async (values: any) => {\n        if (id) {\n            await dispatch(updateAnnouncementDetailsAsync(values)).then(handleResult);\n        }\n        else await dispatch(createAnnouncementAsync(values)).then(handleResult);\n    }\n\n    if (isFetchingDetails) return (<LoadingComponent content=\"Loading announcements...\" />)\n\n    return (\n        <FormPage\n            title={id ? \"Update Announcement\" : \"Add Announcement\"}\n            backNavigationLink={id ? `/announcements/${id}/details` : \"/announcements\"}\n            form={\n                <Formik\n                    validationSchema={validationSchema}\n                    enableReinitialize\n                    initialValues={announcement}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit, isValid }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n                                <FormTextInput label=\"Subject\" name=\"title\" placeholder=\"Subject\" />\n                                <FormTextArea label=\"Message\" name=\"message\" placeholder=\"Message\" rows={3} />\n                                <FormButtonContainer>\n                                    <AddButton loading={isSaving} disabled={!isValid} />\n                                </FormButtonContainer>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            }\n        />\n    )\n}\n\nexport default AnnouncementForm;","import React from 'react';\nimport { Col, Nav, NavLink, Row } from 'react-bootstrap';\nimport './cards.scss'\n\ninterface Props {\n    title: any\n    subtitle: string\n    icon: React.ReactNode\n    navigateTo: string\n}\n\nconst DashboardCard: React.FC<Props> = ({ title, subtitle, icon, navigateTo }) => {\n    return (\n        <NavLink href={navigateTo} className='dashboard-card__component border d-flex align-items-center justify-content-between py-3 px-5 my-3' >\n            <div className=\"dashboard-card__text\">\n                <h1>{title}</h1>\n                <p>{subtitle}</p>\n            </div>\n\n            <div>\n                {icon}\n            </div>\n        </NavLink >\n    );\n}\n\nexport default DashboardCard;","import { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\"\nimport { Col, Row } from \"react-bootstrap\"\nimport StorefrontOutlinedIcon from '@mui/icons-material/StorefrontOutlined';\nimport GroupOutlinedIcon from '@mui/icons-material/GroupOutlined';\nimport PendingActionsOutlinedIcon from '@mui/icons-material/PendingActionsOutlined';\nimport AssignmentLateOutlinedIcon from '@mui/icons-material/AssignmentLateOutlined';\nimport MoneyOffIcon from '@mui/icons-material/MoneyOff';\nimport DoDisturbOffOutlinedIcon from '@mui/icons-material/DoDisturbOffOutlined';\nimport \"./dashboard.scss\"\n\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\"\nimport MainPage from \"../../app/layouts/components/pages/MainPage\"\nimport DashboardCard from \"../../app/layouts/components/cards/DashboardCard\"\nimport { fetchDashboardAsync } from \"./DashboardSlice\"\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\n\nconst Dashboard = () => {\n    const { dashboard: dashboardData, isFetching: isFetchingDashboard } = useAppSelecter(state => state.dashboard);\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!dashboardData)\n            dispatch(fetchDashboardAsync());\n    }, [])\n\n    const dashboardCardInfos = [\n        {\n            name: \"AVAILABLE SLOTS\",\n            total: `${dashboardData?.availableSlots} / ${dashboardData?.slots}`,\n            icon: <StorefrontOutlinedIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/slots/available\"\n        },\n        {\n            name: \"RENTED SLOTS\",\n            total: dashboardData?.rentedSlots,\n            icon: <DoDisturbOffOutlinedIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/slots/rented\"\n        },\n        {\n            name: \"TENANTS\",\n            total: dashboardData?.tenants,\n            icon: <AccessibilityIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/tenants\"\n        },\n        {\n            name: \"UNPAID INVOICES\",\n            total: dashboardData?.unpaidInvoices,\n            icon: <MoneyOffIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/invoices/unpaid\"\n        },\n        {\n            name: \"PENDING PAYMENTS\",\n            total: dashboardData?.pendingPayments,\n            icon: <PendingActionsOutlinedIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/invoices/pending\"\n        },\n        {\n            name: \"LATE PAYMENTS\",\n            total: dashboardData?.latePayments,\n            icon: <AssignmentLateOutlinedIcon sx={{ fontSize: \"80px\", color: \"#234F5B\" }} />,\n            navigateTo: \"/invoices/unpaid\"\n        },\n    ]\n\n    if (isFetchingDashboard) return (<LoadingComponent content=\"Loading dashboard...\" />)\n\n    return (\n\n        <div className=\"mb-5\">\n            <h4 className=\"page__title w-100 d-flex align-items-center px-4\">\n                Dashboard\n            </h4>\n\n            <div className=\"rounded px-5 py-4\" >\n                <Row className=\"mx-3\">\n                    {\n                        dashboardCardInfos.map(i =>\n                            <Col lg={4}>\n                                <DashboardCard\n                                    title={i.total}\n                                    subtitle={i.name}\n                                    icon={i.icon}\n                                    navigateTo={i.navigateTo}\n                                />\n                            </Col>\n                        )\n                    }\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { Formik } from 'formik';\nimport { useState } from 'react';\nimport { FieldValues } from 'react-hook-form';\nimport { Button, Form, Header, Image, Segment } from 'semantic-ui-react'\nimport LoadingComponent from '../../app/layouts/components/loading/LoadingComponent';\nimport FormPage from '../../app/layouts/components/pages/FormPage';\nimport { IAccount } from '../../app/models/account';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport history from '../../app/utils/history';\nimport { signInUserAsync } from './accountSlice';\nimport * as Yup from 'yup';\nimport FormTextInput from '../../app/layouts/components/form/FormTextInput';\nimport FormButtonContainer from '../../app/layouts/components/form/FormButtonContainer';\nimport AddButton from '../../app/layouts/components/buttons/AddButton';\nimport { fetchDashboardAsync } from '../dashboard/DashboardSlice';\n\nconst LoginForm = () => {\n    const [account, setAccount] = useState<IAccount>(\n        { username: \"\", password: \"\" }\n    )\n\n    const { user } = useAppSelecter(state => state.account)\n\n    const dispatch = useAppDispatch();\n\n    const validationSchema = Yup.object(\n        {\n            username: Yup.string().required('Username is required.'),\n            password: Yup.string().required('Password is required.'),\n        }\n    )\n\n    const onSubmit = async (data: FieldValues) => {\n        await dispatch(signInUserAsync(data));\n        await dispatch(fetchDashboardAsync())\n        history.push('/');\n    }\n\n    return (\n        <FormPage\n            title=\"Login\"\n            form={\n                <Formik\n                    validationSchema={validationSchema}\n                    enableReinitialize\n                    initialValues={account}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit, isValid }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n                                <FormTextInput label=\"Username\" name=\"username\" placeholder=\"Username\" />\n                                <FormTextInput type=\"password\" label=\"Password\" name=\"password\" placeholder=\"Password\" />\n                                <FormButtonContainer>\n                                    <AddButton title=\"Login\" disabled={!isValid} />\n                                </FormButtonContainer>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            }\n        />\n    )\n};\n\nexport default LoginForm","\nimport { useEffect } from \"react\";\nimport { Badge, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport { SlotStatus } from \"../../app/models/slot\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchSlotsAsync } from \"../slot/slotSlice\";\n\nconst Map = () => {\n\n    const { slots, isFetching: isFetchingSlots } = useAppSelecter(state => state.slot);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(fetchSlotsAsync());\n    }, [])\n\n\n    if (isFetchingSlots) return (<LoadingComponent content=\"Loading available slots...\" />)\n\n    return (\n        <>\n            <MainPage\n                title=\"Locator\"\n                content={\n                    <img\n                        className=\"p-3\"\n                        src=\"/maximarket-map.png\"\n                        alt=\"\"\n                        style={{ backgroundColor: \"white\", width: \"100%\" }}\n                    />\n                }\n            />\n\n            <MainPage\n                title=\"Available Slots\"\n                content={\n                    <Row className=\"my-5\" style={{ backgroundColor: \"white\", marginTop: \"25px\" }}>\n                        {\n                            slots.filter(i => i.status === SlotStatus.Available).map(s =>\n                                <Col className=\"my-2\" lg={1}>\n                                    <a href={`/tenants/${s.id}/create`} className=\"badge__primary p-3 d-flex justify-content-center\">\n                                        <p className=\"badge__text\">{s.slotNumber}</p>\n                                    </a>\n                                </Col>\n                            )\n                        }\n                    </Row>\n                }\n            />\n        </>\n\n    )\n}\n\nexport default Map;\n","export interface IInvoice {\n  id: string,\n  tenantId: string,\n  firstName: string,\n  lastName: string,\n  phone: string,\n  businessName: string,\n  slotNumber: string,\n  amount: number,\n  payments: IPayment[],\n  invoiceItems: IInvoiceItem[],\n  dateCreated: Date,\n  dueDate: Date,\n  invoiceNumber: string,\n  invoiceStatus: InvoiceStatus\n}\n\nexport interface IPayment {\n  id: string,\n  status: number,\n  bankName: string,\n  accountName: string,\n  accountNumber: string,\n  dateCreated: Date,\n  amount: number,\n  referenceNumber: string,\n  imageUrl: string\n}\n\nexport interface IInvoiceItem {\n  id: string,\n  description: string,\n  amount: number\n}\n\nexport interface IUpdatePaymentStatusModel {\n  id: string,\n  isApproved: boolean\n}\n\nexport enum PaymentStatus {\n  Unpaid,\n  Pending,\n  Approved,\n  Declined\n}\n\nexport enum InvoiceStatus {\n  Unpaid,\n  Pending,\n  PartiallyPaid,\n  Paid\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchModeOfPaymentsAsync, updateModeOfPaymentDetailsAsync, updateStatus } from \"./modeOfPaymentSlice\";\nimport history from '../../app/utils/history';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\nimport ToggleOnOutlinedIcon from '@mui/icons-material/ToggleOnOutlined';\nimport ToggleOffOutlinedIcon from '@mui/icons-material/ToggleOffOutlined';\n\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport { Select } from \"semantic-ui-react\";\n\nconst ModeOfPayment = () => {\n    const [searchKey, setSearchKey] = useState('');\n    const account = useAppSelecter(state => state.account);\n    const { modeOfPayments, isFetching: isFetchingModeOfPayments } = useAppSelecter(state => state.modeOfPayment);\n    const dispatch = useAppDispatch();\n    const [selectedStatus, setSelectedStatus] = useState<boolean | undefined>(undefined);\n\n    const data = useMemo(() => {\n        let searchResult = modeOfPayments;\n        if (!!searchKey) {\n            return modeOfPayments.filter(i =>\n                i.bankName.toLowerCase().includes(searchKey.toLowerCase()) ||\n                i.accountName.toLowerCase().includes(searchKey.toLowerCase())\n            );\n        }\n        if (!!selectedStatus) {\n            searchResult = searchResult.filter(i => i.isEnabled === selectedStatus)\n        }\n        return searchResult;\n    }, [modeOfPayments, searchKey, selectedStatus])\n\n    useEffect(() => {\n        dispatch(fetchModeOfPaymentsAsync());\n    }, [])\n\n    const onUpdate = async (values: any) => {\n        await dispatch(updateModeOfPaymentDetailsAsync(values));\n        dispatch(updateStatus(values))\n    }\n\n    const columns = [\n        { title: 'Bank Name' },\n        { title: 'Account Name' },\n        { title: 'Account Number' },\n        { title: 'Show/Hide' },\n        { title: '' },\n    ]\n\n    const modeOfPaymentStatusOptions = [\n        { text: \"All\", value: undefined },\n        { text: \"Showed\", value: true },\n        { text: \"Hidden\", value: false }\n    ]\n\n    if (isFetchingModeOfPayments) return <LoadingComponent content=\"Loading Mode of Payments...\" />\n\n    return (\n        <MainPage\n            title=\"Mode of Payment\"\n            content={\n                <CustomTable\n                    searchValue={searchKey}\n                    onSearch={(value: string) => setSearchKey(value)}\n                    buttonTitle={account.user?.roles.some(i => i.toLowerCase() === \"admin\") ? undefined : \"Add Mode of Payment\"}\n                    navigateTo=\"/mode-of-payments/create\"\n                    columns={columns}\n                    tableControls={\n                        <Select\n                            options={modeOfPaymentStatusOptions}\n                            value={selectedStatus}\n                            onChange={(e, d) => setSelectedStatus(!!d.value ? d.value as boolean : undefined)}\n                            name=\"modeOfPaymentId\"\n                            placeholder=\"Select status\"\n                            label=\"Mode of Payment status\"\n                        />\n                    }\n                    rows={\n                        !data.length ?\n                            [\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={columns.length}>\n                                        No data\n                                    </TableCell>\n                                </TableRow>\n                            ]\n                            :\n                            data.map(mop =>\n                                <TableRow key={mop.id}>\n\n                                    <TableCell align=\"center\">\n                                        {mop.bankName}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {mop.accountName}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {mop.accountNumber}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        <div onClick={() => account.user?.roles.some(i => i.toLowerCase() === \"admin\") ? {} : onUpdate({...mop, isEnabled: !mop.isEnabled})}>\n                                            {mop.isEnabled ?\n                                                <ToggleOnOutlinedIcon fontSize=\"medium\" /> :\n                                                <ToggleOffOutlinedIcon fontSize=\"medium\" />}\n                                        </div>\n                                    </TableCell>\n\n                                    <TableCell align=\"right\">\n                                        {account.user?.roles.some(i => i.toLowerCase() === \"admin\") ? <></> : <NavigateNextOutlinedIcon onClick={() => history.push(`/mode-of-payments/${mop.id}/details`)} />}\n                                    </TableCell>\n\n                                </TableRow>\n                            )\n                    }\n                />\n            }\n        />\n    );\n}\n\nexport default ModeOfPayment;","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { deleteModeOfPaymentDetailsAsync, fetchModeOfPaymentDetailsAsync } from \"./modeOfPaymentSlice\";\nimport history from \"../../app/utils/history\";\n\nimport DeleteButton from \"../../app/layouts/components/buttons/DeleteButton\";\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\";\nimport DetailsPage from \"../../app/layouts/components/pages/DetailsPage\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\nimport NavigationButton from \"../../app/layouts/components/buttons/NavigationButton\";\n\nconst ModeOfPaymentDetails = () => {\n\n    const { modeOfPayment, isFetchingDetails, isSaving } = useAppSelecter(state => state.modeOfPayment);\n    const { id } = useParams<{ id: string }>();\n    const dispatch = useAppDispatch();\n\n    const account = useAppSelecter(state => state.account);\n    \n    useEffect(() => {\n        if(!!account && account.user?.roles.some(i => i.toLowerCase() == \"admin\"))\n            history.push('/mode-of-payments')\n    }, [account])\n\n    useEffect(() => {\n        if(id) dispatch(fetchModeOfPaymentDetailsAsync(id));\n    }, [])\n\n    const handleDelete = async () => {\n        if(id) { \n            await dispatch(deleteModeOfPaymentDetailsAsync(id));\n            history.push('/mode-of-payments')\n        }\n    }\n\n    if (isFetchingDetails || !modeOfPayment) return (<LoadingComponent content=\"Loading mode of payment details...\" />)\n\n    const { bankName, accountName, accountNumber } = modeOfPayment\n\n    return (\n        <DetailsPage\n            title=\"Mode of Payment Details\"\n            backNavigationLink={`/mode-of-payments`}\n            content={\n                <>\n                    <DetailItem title=\"Bank Name\" value={bankName} />\n                    <DetailItem title=\"Account Name\" value={accountName} />\n                    <DetailItem title=\"Account Number\" value={accountNumber} />\n                    <FormButtonContainer>\n                        <NavigationButton title=\"Edit\" navigateTo={`/mode-of-payments/${id}/manage`} />\n                        <DeleteButton onClick={handleDelete} loading={isSaving} />\n                    </FormButtonContainer>\n                </>\n            }\n        />\n    );\n}\n\nexport default ModeOfPaymentDetails;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { IModeOfPayment } from \"../../app/models/modeOfPayment\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { createModeOfPaymentAsync, fetchModeOfPaymentDetailsAsync, updateModeOfPaymentDetailsAsync } from \"./modeOfPaymentSlice\";\nimport history from '../../app/utils/history';\n\nimport AddButton from \"../../app/layouts/components/buttons/AddButton\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\nimport FormPage from \"../../app/layouts/components/pages/FormPage\";\nimport FormTextInput from \"../../app/layouts/components/form/FormTextInput\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\n\nconst ModeOfPaymentForm = () => {\n\n    const [modeOfPayment, setModefPayment] = useState<IModeOfPayment>({\n        id: \"\",\n        bankName: \"\",\n        accountName: \"\",\n        accountNumber: \"\",\n        isEnabled: true\n    })\n\n    const account = useAppSelecter(state => state.account);\n    const { modeOfPayment: modeOfPaymentData, isFetchingDetails, isSaving } = useAppSelecter(state => state.modeOfPayment);\n    const dispatch = useAppDispatch();\n\n    const { id } = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if(!!account && account.user?.roles.some(i => i.toLowerCase() == \"admin\"))\n            history.push('/mode-of-payments')\n    }, [account])\n\n    useEffect(() => {\n        if (!!id) dispatch(fetchModeOfPaymentDetailsAsync(id));\n    }, [])\n\n    useEffect(() => {\n        if (id && modeOfPaymentData) setModefPayment(modeOfPaymentData)\n    }, [id, modeOfPaymentData])\n\n    const validationSchema = Yup.object({\n        bankName: Yup.string().required(\"Bank name is required.\"),\n        accountName: Yup.string().required(\"Account name is required.\"),\n        accountNumber: Yup.string().required(\"Account number is required.\"),\n    })\n\n    const handleResult = (data: any) => {\n        if (!!data.error) {\n            console.log('error')\n        } else {\n            history.push(`/mode-of-payments/${!!id ? id : (data.payload as any).id}/details`)\n        }\n    }\n\n    const onSubmit = async (values: any) => {\n        if (id) {\n            await dispatch(updateModeOfPaymentDetailsAsync(values)).then(handleResult);\n        }\n        else await dispatch(createModeOfPaymentAsync(values)).then(handleResult);\n    }\n\n    if (isFetchingDetails) return (<LoadingComponent content=\"Loading mode of payments...\" />)\n\n    return (\n        <FormPage\n            title={id ? \"Update Mode of Payment\" : \"Add Mode of Payment\"}\n            backNavigationLink={id ? `/mode-of-payments/${id}/details` : \"/mode-of-payments\"}\n            form={\n                <Formik\n                    validationSchema={validationSchema}\n                    enableReinitialize\n                    initialValues={modeOfPayment}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit, isValid }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n                                <FormTextInput label=\"Bank Name\" name=\"bankName\" placeholder=\"Bank Name\" />\n                                <FormTextInput label=\"Account Name\" name=\"accountName\" placeholder=\"Accounnt Name\" />\n                                <FormTextInput label=\"Account Number\" name=\"accountNumber\" placeholder=\"Account Number\" />\n                                <FormButtonContainer>\n                                    <AddButton loading={isSaving} disabled={!isValid} />\n                                </FormButtonContainer>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            }\n        />\n    )\n}\n\nexport default ModeOfPaymentForm;","import { SemanticCOLORS } from \"semantic-ui-react\";\nimport { InvoiceStatus, PaymentStatus } from \"../models/invoice\";\nimport { SlotStatus } from \"../models/slot\";\n\nexport const getSlotStatusText = (slotStatus: SlotStatus) => {\n  switch (slotStatus) {\n    case SlotStatus.Available: return \"Available\";\n    case SlotStatus.Rented: return \"Rented\";\n    case SlotStatus.UnderMaintenance: return \"Under Maintenance\";\n    case SlotStatus.Reserved: return \"Reserved\";\n    case SlotStatus.Archived: return \"Archived\";\n    default: return \"NA\";\n  }\n}\n\nexport const getSlotStatusColor = (slotStatus: SlotStatus) => {\n  switch (slotStatus) {\n    case SlotStatus.Available: return \"green\" as SemanticCOLORS;\n    case SlotStatus.Rented: return \"blue\" as SemanticCOLORS;\n    case SlotStatus.UnderMaintenance: return \"yellow\" as SemanticCOLORS;\n    case SlotStatus.Reserved: return \"orange\" as SemanticCOLORS;\n    case SlotStatus.Archived: return \"grey\" as SemanticCOLORS;\n    default: return \"green\" as SemanticCOLORS;\n  }\n}\n\nexport const getPaymentStatusText = (paymentStatus: PaymentStatus) => {\n  switch (paymentStatus) {\n    case PaymentStatus.Unpaid: return \"Unpaid\";\n    case PaymentStatus.Pending: return \"Pending\";\n    case PaymentStatus.Approved: return \"Approved\";\n    case PaymentStatus.Declined: return \"Declined\";\n    default: return \"NA\";\n  }\n}\n\nexport const getPaymentStatusColor = (paymentStatus: PaymentStatus) => {\n  switch (paymentStatus) {\n    case PaymentStatus.Unpaid: return \"orange\";\n    case PaymentStatus.Pending: return \"yellow\";\n    case PaymentStatus.Approved: return \"blue\";\n    case PaymentStatus.Declined: return \"red\";\n    default: return \"red\";\n  }\n}\n\nexport const getInvoiceStatusText = (status: InvoiceStatus) => {\n  switch (status) {\n    case InvoiceStatus.Unpaid: return \"Unpaid\";\n    case InvoiceStatus.Pending: return \"Pending Payment\";\n    case InvoiceStatus.Paid: return \"Paid\";\n    case InvoiceStatus.PartiallyPaid: return \"Partially Paid\";\n    default: return \"NA\";\n  }\n}\n\nexport const getInvoiceStatusColor = (status: InvoiceStatus) => {\n  switch (status) {\n    case InvoiceStatus.Unpaid: return \"red\";\n    case InvoiceStatus.Pending: return \"yellow\";\n    case InvoiceStatus.Paid: return \"blue\";\n    case InvoiceStatus.PartiallyPaid: return \"orange\";\n    default: return \"red\";\n  }\n}","export interface IDateDurationInput {\n    startDate: Date\n    endDate: Date\n}\n\nexport interface IInvoiceReportInput {\n    reportType?: ReportType;\n    date?: string;\n}\n\nexport interface IInvoiceReport {\n    invoice: IInvoiceReportItem,\n    paid: IInvoiceReportItem,\n    unpaid: IInvoiceReportItem,\n    pending: IInvoiceReportItem\n}\n\nexport interface IInvoiceReportItem {\n    quantity: number;\n    amount: number;\n}\n\nexport enum ReportType {\n    Daily = 0,\n    Weekly = 1,\n    Monthly = 2,\n    Yearly = 3\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport history from '../../app/utils/history';\nimport moment from \"moment\";\n\nimport { Label, Select } from \"semantic-ui-react\";\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\nimport { getInvoiceStatusColor, getInvoiceStatusText, getPaymentStatusColor, getPaymentStatusText } from \"../../app/utils/common\";\n\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport { IInvoice, InvoiceStatus, PaymentStatus } from \"../../app/models/invoice\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchInvoicesAsync } from \"./invoiceSlice\";\n\nconst Payment = () => {\n  const { filter } = useParams<{ filter: string }>()\n  const [searchKey, setSearchKey] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState<InvoiceStatus | undefined>(undefined);\n  const { invoices, isFetching: isFetchingPayments } = useAppSelecter(state => state.invoice);\n  const dispatch = useAppDispatch();\n\n  const data = useMemo(() => {\n    let result = invoices;\n    if (!!searchKey) {\n      result = result.filter(i =>\n        i.slotNumber.toLowerCase().includes(searchKey.toLowerCase()) ||\n        i.firstName.toLowerCase().includes(searchKey.toLowerCase()) ||\n        i.lastName.toLowerCase().includes(searchKey.toLowerCase())\n      );\n    }\n\n    if(selectedStatus != undefined || selectedStatus != null) {\n      result = result.filter(i => i.invoiceStatus === selectedStatus);\n    }\n\n    return result;\n  }, [invoices, searchKey, selectedStatus])\n\n  useEffect(() => {\n    dispatch(fetchInvoicesAsync());\n  }, [])\n\n  useEffect(() => {\n    switch (filter) {\n      case \"pending\":\n        setSelectedStatus(InvoiceStatus.Pending)\n        break;\n      case \"unpaid\":\n        setSelectedStatus(InvoiceStatus.Unpaid);\n        break\n      case \"paid\":\n        setSelectedStatus(InvoiceStatus.Paid);\n        break;\n      case \"partiallypaid\":\n        setSelectedStatus(InvoiceStatus.PartiallyPaid);\n        break;\n      default:\n        setSelectedStatus(undefined);\n    }\n  }, [filter])\n\n  const status = (invoice: IInvoice) => <Label content={getInvoiceStatusText(invoice.invoiceStatus)} color={getInvoiceStatusColor(invoice.invoiceStatus)} />\n\n  const columns = [\n    { title: 'Invoice no.' },\n    { title: 'Tenant' },\n    { title: 'Slot Number' },\n    { title: 'Rental Fee' },\n    { title: 'Due Date' },\n    { title: 'Status' },\n    { title: '' },\n  ]\n\n  const paymentStatusOptions = [\n    { text: \"All\", value: undefined },\n    { text: getPaymentStatusText(PaymentStatus.Unpaid), value: PaymentStatus.Unpaid },\n    { text: getPaymentStatusText(PaymentStatus.Pending), value: PaymentStatus.Pending },\n    { text: getPaymentStatusText(PaymentStatus.Approved), value: PaymentStatus.Approved },\n    { text: getPaymentStatusText(PaymentStatus.Declined), value: PaymentStatus.Declined },\n\n  ]\n\n  if (isFetchingPayments) return <LoadingComponent content=\"Loading invoices...\" />\n\n  return (\n    <MainPage\n      title=\"Invoices\"\n      content={\n        <CustomTable\n          searchValue={searchKey}\n          onSearch={(value: string) => setSearchKey(value)}\n          columns={columns}\n          tableControls={\n            <Select\n              options={paymentStatusOptions}\n              value={selectedStatus}\n              onChange={(e, d) => setSelectedStatus(d.value as any)}\n              name=\"paymentStatus\"\n              placeholder=\"Invoice Status\"\n            />\n          }\n          rows={\n            !data.length ?\n              [\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={columns.length}>\n                    No data\n                  </TableCell>\n                </TableRow>\n              ]\n              :\n              data.map(i =>\n                <TableRow key={i.id}>\n\n                  <TableCell align=\"center\">\n                    {i.invoiceNumber}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {`${i.firstName} ${i.lastName}`}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {i.slotNumber}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {i.amount}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {moment(i.dueDate).format(\"MMM DD, YYYY\")}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {status(i)}\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    <NavigateNextOutlinedIcon onClick={() => history.push(`/invoices/${i.id}/details`)} />\n                  </TableCell>\n\n                </TableRow>\n              )\n          }\n        />\n      }\n    />\n  );\n}\n\nexport default Payment;","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Button, SemanticCOLORS } from 'semantic-ui-react';\nimport \"./button.scss\"\n\ninterface Props {\n    title: string,\n    loading?: boolean\n    disabled?: boolean,\n    color: SemanticCOLORS,\n    onClick: () => void,\n}\n\nconst UpdateButton: React.FC<Props> = ({ title, loading, disabled, color, onClick }) => {\n    return (\n        <Button\n            content={title}\n            loading={loading}\n            disabled={disabled}\n            color={color}\n            onClick={onClick}\n        />\n\n    );\n}\n\nexport default UpdateButton;","import { useEffect, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchInvoiceDetailsAsync, updateInvoicePaymentStatusAsync } from \"./invoiceSlice\";\nimport { getInvoiceStatusColor, getInvoiceStatusText, getPaymentStatusColor, getPaymentStatusText } from \"../../app/utils/common\";\nimport { currencyFormatter } from \"../../app/layouts/formatter/common\";\nimport { Label } from \"semantic-ui-react\";\nimport ImageOutlinedIcon from '@mui/icons-material/ImageOutlined';\nimport TableRow from '@mui/material/TableRow';\nimport moment from \"moment\";\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\n\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\";\nimport DetailsPage from \"../../app/layouts/components/pages/DetailsPage\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport UpdateButton from \"../../app/layouts/components/buttons/UpdateButton\";\nimport { PaymentStatus } from \"../../app/models/invoice\";\nimport { Paper, TableHead } from \"@mui/material\";\nimport { Col, Row } from \"react-bootstrap\";\nimport './PaymentDetails.scss';\n\nconst PaymentDetails = () => {\n\n    const { invoice, isFetchingDetails } = useAppSelecter(state => state.invoice);\n    const dispatch = useAppDispatch();\n\n    const { id } = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if (id) dispatch(fetchInvoiceDetailsAsync(id));\n    }, [])\n\n    const totalAmountPaid = useMemo(\n        () => !!invoice && !!invoice.payments ?\n            invoice.payments.filter(i => i.status == 2).reduce((previousValue, currentValue) =>\n                previousValue + currentValue.amount, 0) : 0,\n        [invoice]\n    );\n\n    if (isFetchingDetails || !invoice) return (<LoadingComponent content=\"Loading invoice details...\" />)\n\n    const {\n        amount,\n        businessName,\n        dueDate,\n        firstName,\n        invoiceItems,\n        invoiceNumber,\n        lastName,\n        payments,\n        phone,\n        slotNumber,\n    } = invoice\n\n    const status = () => <Label content={getInvoiceStatusText(invoice.invoiceStatus)} color={getInvoiceStatusColor(invoice.invoiceStatus)} />\n    const updateStatus = async (id: string, isApproved: boolean) => {\n        await dispatch(updateInvoicePaymentStatusAsync({ id, isApproved }))\n        await dispatch(fetchInvoiceDetailsAsync(id));\n    }\n\n    const handleApproval = async (id: string) => {\n        updateStatus(id, true)\n    }\n\n    const paymentTableColumn = [\n        { title: 'Date' },\n        { title: 'Mode of Payment' },\n        { title: 'Account Name' },\n        { title: 'Account Number' },\n        { title: 'Amount Paid' },\n        { title: 'Proof of Payment' },\n        { title: 'Status' },\n        { title: '' },\n    ]\n\n    if (!invoice)\n        return <LoadingComponent content=\"Loading invoice...\" />\n\n    return (\n        <>\n            <DetailsPage\n                title=\"Invoice Details\"\n                backNavigationLink=\"/invoices\"\n                content={\n                    <>\n                        <div className=\"d-flex my-5\">\n                            <div className=\"w-75\">\n                                <DetailItem title=\"Name\" value={`${firstName} ${lastName}`} space={2} />\n                                <DetailItem title=\"Business Name\" value={businessName} space={2} />\n                                <DetailItem title=\"Contact Number\" value={phone} space={2} />\n                            </div>\n\n                            <div className=\"w-25\">\n                                <DetailItem title=\"Invoice Number\" value={invoiceNumber} space={6} />\n                                <DetailItem title=\"Due Date\" value={moment(dueDate).format(\"MMM DD, YYYY\")} space={6} />\n                                <DetailItem title=\"Status\" value={status()} space={6} />\n                            </div>\n                        </div>\n\n                        <div className=\"payment-details__title\">Rental Payment For Slot Number {slotNumber}</div>\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 500 }}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className=\"w-75\" align=\"left\" style={{ fontSize: 14 }} >\n                                            Description\n                                        </TableCell>\n\n                                        <TableCell align=\"right\" style={{ fontSize: 14 }} >\n                                            Amount\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {\n                                        invoiceItems.map(i =>\n                                            <TableRow>\n                                                <TableCell>\n                                                    {i.description}\n                                                </TableCell>\n\n                                                <TableCell align=\"right\">\n                                                    {currencyFormatter(i.amount)}\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    }\n\n                                    <TableRow>\n                                        <TableCell align=\"right\">\n                                            <p className=\"font__bold\">Total:</p>\n                                        </TableCell>\n\n                                        <TableCell align=\"right\">\n                                            <p className=\"font__bold\">{currencyFormatter(amount)}</p>\n                                        </TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </>\n                }\n            />\n\n            <MainPage\n                title=\"Payment\"\n                content={\n                    <>\n                        <CustomTable\n                            navigateTo=\"/invoices/create\"\n                            noPagination\n                            columns={paymentTableColumn}\n                            rows={\n                                !payments.length ?\n                                    [\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={paymentTableColumn.length}>\n                                                No data\n                                            </TableCell>\n                                        </TableRow>\n                                    ]\n                                    :\n                                    payments.map(payment =>\n                                        <>\n                                            <TableRow key={payment.id}>\n\n                                                <TableCell align=\"center\">\n                                                    {moment(payment.dateCreated).format(\"MMM DD, YYYY\")}\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    {payment.bankName}\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    {payment.accountName}\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    {payment.accountNumber}\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    {currencyFormatter(payment.amount)}\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    <a href={payment.imageUrl} target='_blank'  >\n                                                    <ImageOutlinedIcon sx={{ color: \"#F2711C\" }} />\n                                                    </a>\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    <Label content={getPaymentStatusText(payment.status)} color={getPaymentStatusColor(payment.status)} />\n                                                </TableCell>\n\n                                                <TableCell align=\"center\">\n                                                    {\n                                                        !(payment.status === PaymentStatus.Approved || payment.status === PaymentStatus.Declined) &&\n                                                        <>\n                                                            <UpdateButton title=\"Approve\" color=\"blue\" onClick={() => handleApproval(payment.id)} />\n                                                            <UpdateButton title=\"Decline\" color=\"red\" onClick={() => updateStatus(payment.id, false)} />\n                                                        </>\n                                                    }\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    )\n                            }\n                        />\n\n                        <TableContainer component={Paper}>\n                            <Table sx={{ minWidth: 500 }}>\n                                <TableBody>\n\n                                    <TableRow>\n                                        <TableCell className=\"w-75\" align=\"right\">\n                                            <p className=\"font__bold\">Balance:</p>\n                                        </TableCell>\n\n                                        <TableCell align=\"right\">\n                                            <p className=\"font__bold\">{currencyFormatter(amount - totalAmountPaid)}</p>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </>\n                }\n            />\n        </>\n    );\n}\n\nexport default PaymentDetails;","import { useEffect, useState } from 'react';\nimport { ReportType } from '../../app/models/report';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { Select } from \"semantic-ui-react\";\nimport MainPage from '../../app/layouts/components/pages/MainPage';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport { fetchInvoiceReportAsync } from './reportSlice';\nimport CustomTable from '../../app/layouts/components/table/CustomTable';\nimport DatePicker from 'react-datepicker';\n\n\nconst Report = () => {\n    const { report, isFetching } = useAppSelecter(state => state.report);\n    const dispatch = useAppDispatch();\n\n    const [selectedReportType, setSelectedReportType] = useState<ReportType | undefined>(ReportType.Daily);\n    const [selectedDate, setSelectedDate] = useState<string | undefined>((new Date()).toDateString());\n\n    useEffect(() => {\n        dispatch(fetchInvoiceReportAsync({ reportType: selectedReportType, date: selectedDate }));\n    }, [selectedReportType, selectedDate])\n\n    const columns = [\n        { title: '' },\n        { title: 'Quantity' },\n        { title: 'Amount' }\n    ]\n\n    const reportOptions = [\n        { text: \"All\", value: undefined },\n        { text: \"Daily\", value: ReportType.Daily },\n        { text: \"Weekly\", value: ReportType.Weekly },\n        { text: \"Monthly\", value: ReportType.Monthly },\n        { text: \"Yearly\", value: ReportType.Yearly },\n\n    ]\n    return (\n        <MainPage\n            title=\"Reports\"\n            content={\n                <CustomTable\n                    searchValue={undefined}\n                    onSearch={undefined}\n                    columns={columns}\n                    tableControls={\n                        <div className='d-flex align-items-center'>\n                            <Select\n                                className='me-2'\n                                options={reportOptions}\n                                value={selectedReportType}\n                                onChange={(e, d) => setSelectedReportType(!!d.value ? d.value as ReportType : undefined)}\n                                name=\"report type\"\n                                placeholder=\"Report type\"\n                            />\n                            <DatePicker\n                                className=\"form__input\"\n                                selected={(!!selectedDate && new Date(selectedDate)) || null}\n                                onChange={value => setSelectedDate(value && value.toDateString() || undefined)}\n                                dateFormat={\"MMMM d, yyyy\"}\n                            />\n                        </div>\n                    }\n                    rows={\n                        !report ?\n                            [\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={columns.length}>No data</TableCell>\n                                </TableRow>\n                            ]\n                            : [\n                                <TableRow>\n                                    <TableCell align=\"left\">Generated Invoice</TableCell>\n                                    <TableCell align=\"center\">{report.invoice.quantity}</TableCell>\n                                    <TableCell align=\"center\">{report.invoice.amount}</TableCell>\n                                </TableRow>,\n\n                                <TableRow>\n                                    <TableCell align=\"left\">Paid Invoice</TableCell>\n                                    <TableCell align=\"center\">{report.paid.quantity}</TableCell>\n                                    <TableCell align=\"center\">{report.paid.amount}</TableCell>\n                                </TableRow>,\n\n                                <TableRow>\n                                    <TableCell align=\"left\">Unpaid Invoice</TableCell>\n                                    <TableCell align=\"center\">{report.unpaid.quantity}</TableCell>\n                                    <TableCell align=\"center\">{report.unpaid.amount}</TableCell>\n                                </TableRow>,\n\n                                <TableRow><TableCell align=\"left\">Pending Invoice</TableCell>\n                                    <TableCell align=\"center\">{report.pending.quantity}</TableCell>\n                                    <TableCell align=\"center\">{report.pending.amount}</TableCell>\n                                </TableRow>\n                            ]\n                    }\n                />\n            }\n        />\n    );\n}\n\nexport default Report;\n\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchSlotsAsync } from \"./slotSlice\";\nimport history from '../../app/utils/history';\n\nimport { Label, Select } from 'semantic-ui-react';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\n\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport { currencyFormatter } from \"../../app/layouts/formatter/common\";\nimport { getSlotStatusColor, getSlotStatusText } from \"../../app/utils/common\";\nimport { SlotStatus } from \"../../app/models/slot\";\nimport { useParams } from \"react-router-dom\";\n\nconst Slot = () => {\n  const { filter } = useParams<{ filter: string }>()\n  const [searchKey, setSearchKey] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState<SlotStatus | undefined>(undefined);\n  const { slots, isFetching: isFetchingSlots } = useAppSelecter(state => state.slot);\n\n  const dispatch = useAppDispatch();\n\n  const data = useMemo(() => {\n    let searchResult = slots;\n    if (!!searchKey) {\n      searchResult = searchResult.filter(i => i.slotNumber.toLowerCase().includes(searchKey.toLowerCase()));\n    }\n\n    if (!!selectedStatus) {\n      searchResult = searchResult.filter(i => i.status === selectedStatus);\n    }\n\n    return searchResult;\n  }, [slots, searchKey, selectedStatus])\n\n  useEffect(() => {\n    dispatch(fetchSlotsAsync());\n  }, [])\n\n  useEffect(() => {\n    switch (filter) {\n      case \"available\":\n        setSelectedStatus(SlotStatus.Available);\n        break;\n\n      case \"rented\":\n        setSelectedStatus(SlotStatus.Rented);\n        break;\n      case \"reserved\":\n        setSelectedStatus(SlotStatus.Reserved);\n        break;\n      case \"underMaintenance\":\n        setSelectedStatus(SlotStatus.UnderMaintenance);\n        break;\n      case \"archived\":\n        setSelectedStatus(SlotStatus.Archived);\n        break;\n      default:\n        setSelectedStatus(undefined)\n    }\n  }, [filter])\n\n  const columns = [\n    { title: 'Slot Number' },\n    { title: 'Size' },\n    { title: 'Rental Fee' },\n    { title: 'Status' },\n    { title: '' },\n  ]\n\n  const slotStatusOptions = [\n    { text: 'All', value: undefined },\n    { text: getSlotStatusText(SlotStatus.Available), value: SlotStatus.Available },\n    { text: getSlotStatusText(SlotStatus.Rented), value: SlotStatus.Rented },\n    { text: getSlotStatusText(SlotStatus.Reserved), value: SlotStatus.Reserved },\n    { text: getSlotStatusText(SlotStatus.UnderMaintenance), value: SlotStatus.UnderMaintenance },\n    { text: getSlotStatusText(SlotStatus.Archived), value: SlotStatus.Archived }\n  ]\n\n  if (isFetchingSlots) return <LoadingComponent content=\"Loading Slots...\" />\n\n  return (\n    <MainPage\n      title=\"Slots\"\n      content={\n        <CustomTable\n          searchValue={searchKey}\n          onSearch={(value: string) => setSearchKey(value)}\n          buttonTitle=\"Add Slot\"\n          navigateTo=\"/slots/create\"\n          columns={columns}\n          tableControls={\n            <Select\n              options={slotStatusOptions}\n              value={selectedStatus}\n              onChange={(e, d) => setSelectedStatus(!!d.value ? d.value as SlotStatus : undefined)}\n              name=\"slotId\"\n              placeholder=\"Slot status\"\n            />\n          }\n          rows=\n          {\n            !data.length ?\n              [\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={columns.length}>\n                    No data\n                  </TableCell>\n                </TableRow>\n              ]\n              :\n              data.map(slot =>\n                <TableRow key={slot.id}>\n\n                  <TableCell align=\"center\">\n                    {slot.slotNumber}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {slot.size}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {currencyFormatter(slot.price!)}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    <Label content={getSlotStatusText(slot.status)} color={getSlotStatusColor(slot.status)}></Label>\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    <NavigateNextOutlinedIcon onClick={() => history.push(`/slots/${slot.id}/details`)} />\n                  </TableCell>\n\n                </TableRow>\n              )\n          }\n        />\n      }\n    />\n  )\n}\n\n\nexport default Slot;","import { useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { currencyFormatter } from \"../../app/layouts/formatter/common\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { deleteSlotDetailsAsync, fetchSlotDetailsAsync, fetchSlotTanantsAsync } from \"./slotSlice\";\nimport { getSlotStatusColor, getSlotStatusText } from \"../../app/utils/common\";\n\nimport DetailsPage from \"../../app/layouts/components/pages/DetailsPage\";\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport NavigationButton from \"../../app/layouts/components/buttons/NavigationButton\";\nimport { Label, Select } from \"semantic-ui-react\";\nimport DeleteButton from \"../../app/layouts/components/buttons/DeleteButton\";\nimport history from \"../../app/utils/history\";\nimport { SlotStatus } from \"../../app/models/slot\";\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\n\nconst SlotDetails = () => {\n\n  const [searchKey, setSearchKey] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState<boolean | undefined>(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  const { slot, isFetchingDetails, isSaving, tenants } = useAppSelecter(state => state.slot);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchSlotDetailsAsync(id));\n      dispatch(fetchSlotTanantsAsync(id))\n    }\n  }, [])\n\n\n  const data = useMemo(() => {\n    let searchResult = tenants;\n    if (!!searchKey) {\n      searchResult = tenants.filter(i => i.firstName.toLowerCase().includes(searchKey.toLowerCase())\n        || i.lastName.toLowerCase().includes(searchKey.toLowerCase())\n        || i.businessName.toLowerCase().includes(searchKey.toLowerCase())\n        || i.phone.toLowerCase().includes(searchKey.toLowerCase())\n        || (!!i.contract && i.contract?.slotNumber.toLowerCase().includes(searchKey.toLowerCase())));\n    }\n\n    if (!!selectedStatus) {\n      searchResult = searchResult.filter(i => i.isActive === selectedStatus)\n    }\n\n    return searchResult;\n  }, [tenants, searchKey, selectedStatus])\n\n  if (isFetchingDetails || !slot) return (<LoadingComponent content=\"Loading slot details...\" />)\n\n  const handleDelete = () => {\n    if (id) dispatch(deleteSlotDetailsAsync(id));\n    history.push('/slots')\n  }\n  const columns = [\n    { title: 'Account Number' },\n    { title: 'Full Name' },\n    { title: 'Business Name' },\n    { title: 'Contact Number' },\n    { title: 'Slot' },\n    { title: 'Status' },\n    { title: '' },\n  ]\n\n  const tenantStatusOptions = [\n    { text: \"All\", value: undefined },\n    { text: \"Active\", value: true },\n    { text: \"Not active\", value: false }\n  ]\n  return (\n    <>\n\n      <DetailsPage\n        title=\"Slot Details\"\n        backNavigationLink=\"/slots\"\n        content={\n          <>\n            <DetailItem title=\"Status\" value={<Label content={getSlotStatusText(slot.status)} color={getSlotStatusColor(slot.status)}></Label>} />\n            <DetailItem title=\"Slot Number\" value={slot.slotNumber} />\n            <DetailItem title=\"Size\" value={`${slot.size} sqm.`} />\n            <DetailItem title=\"Rental Fee\" value={slot.price ? currencyFormatter(slot.price) : \"Not Configured\"} />\n            <FormButtonContainer>\n              <NavigationButton title=\"Edit\" navigateTo={`/slots/${id}/manage`} />\n              {\n                slot.status == SlotStatus.Available &&\n                <DeleteButton onClick={handleDelete} loading={isSaving} />\n              }\n            </FormButtonContainer>\n          </>\n        }\n      />\n\n      <DetailsPage\n        title=\"Tenants history\"\n        content={<>\n          <CustomTable\n            buttonTitle={slot.status == SlotStatus.Available ? \"Add Tenant\" : undefined}\n            navigateTo={`/tenants/${slot.id}/create`}\n            columns={columns}\n            rows=\n            {\n              !data.length ?\n                [\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={columns.length}>\n                      No data\n                    </TableCell>\n                  </TableRow>\n                ]\n                :\n                data.map(tenant => <TableRow key={tenant.id}>\n                  <TableCell align=\"center\">\n                    {tenant.tenantUniqueId}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {`${tenant.firstName} ${tenant.lastName}`}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {tenant.businessName}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {tenant.phone}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {tenant.contract?.slotNumber}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {\n                      tenant.isActive ?\n                        <Label color=\"orange\" content=\"Active\" /> :\n                        <Label color=\"red\" content=\"Not Active\" />\n                    }\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    <NavigateNextOutlinedIcon onClick={() => history.push(`/tenants/${tenant.id}/details`)} />\n                  </TableCell>\n\n                </TableRow>\n                )\n            }\n          />\n        </>\n        }\n      />\n    </>\n  );\n}\n\nexport default SlotDetails;","import { useField } from \"formik\";\nimport { Col, FormLabel, Row } from \"react-bootstrap\";\nimport { Label, Select } from \"semantic-ui-react\";\nimport \"./form.scss\"\n\ninterface Props {\n    placeholder: string\n    name: string\n    options: any\n    label?: string\n    formLabel?: string\n}\n\nconst FormSelectInput = (props: Props) => {\n\n    const [field, meta, helpers] = useField(props.name)\n\n    return (\n        <Row className=\"mb-3\">\n            <Col lg={2}>\n                <FormLabel className=\"form__label\">{props.label}</FormLabel>\n            </Col>\n\n            <Col>\n                <Select\n                    className=\"form__input\"\n                    name={props.name}\n                    clearable\n                    options={props.options}\n                    value={!!field.value ||  field.value === 0 ? field.value : null}\n                    onChange={(e, d) => helpers.setValue(d.value)}\n                    onBlur={() => helpers.setTouched(true)}\n                    placeholder={props.placeholder}\n                />\n\n                {\n                    meta.touched && meta.error ?\n                        (\n                            <Label basic color=\"red\">{meta.error}</Label>\n                        ) :\n                        null\n                }\n            </Col>\n        </Row>\n    );\n}\n\nexport default FormSelectInput;\n\n\n","import { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchSlotDetailsAsync, createSlotAsync, updateSlotDetailsAsync } from \"./slotSlice\";\nimport { useParams } from \"react-router-dom\";\nimport history from '../../app/utils/history';\nimport { Formik, Form } from \"formik\"\nimport * as Yup from 'yup';\n\nimport { Button, Message, Label } from \"semantic-ui-react\";\nimport MenuOpenOutlinedIcon from '@mui/icons-material/MenuOpenOutlined';\n\nimport { ISlot, SlotStatus } from \"../../app/models/slot\";\nimport FormContainer from \"../../app/layouts/components/form/FormContainer\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport FormTextInput from \"../../app/layouts/components/form/FormTextInput\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport FormPage from \"../../app/layouts/components/pages/FormPage\";\nimport { getSlotStatusColor, getSlotStatusText } from \"../../app/utils/common\";\nimport FormSelectInput from \"../../app/layouts/components/form/FormSelectInput\";\nimport { color } from \"@mui/system\";\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\n\nconst SlotForm = () => {\n    const { id } = useParams<{ id: string }>();\n\n    const [slot, setSlot] = useState<ISlot>({\n        id: \"\",\n        slotNumber: \"\",\n        size: 0,\n        price: 0,\n        status: SlotStatus.Available,\n        tenantContract: undefined\n    })\n\n    const { slot: slotDetails, isFetchingDetails, isSaving } = useAppSelecter(state => state.slot);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (id) dispatch(fetchSlotDetailsAsync(id));\n    }, [id])\n\n    useEffect(() => {\n        slotDetails && setSlot(slotDetails);\n    }, [slotDetails])\n\n    const validationSchema = Yup.object({\n        slotNumber: Yup.string().required(\"Slot Number is required.\"),\n        size: Yup.number().required(\"Size is required.\"),\n        price: Yup.number().required(\"Rental Fee is required.\")\n    })\n\n    if (isFetchingDetails) return (<LoadingComponent content=\"Loading slot...\" />)\n\n    const handleResult = (data: any) => {\n        if (!!data.error) {\n            console.log('error')\n        } else {\n            history.push(`/slots/${!!id ? id : (data.payload as any).id}/details`)\n        }\n    }\n\n    const onSubmit = async (values: any) => {\n        if (id) {\n            await dispatch(updateSlotDetailsAsync(values)).then(handleResult);\n        } else {\n            await dispatch(createSlotAsync(values)).then(handleResult);\n        }\n    }\n\n    const slotStatusOptions = [\n        { text: getSlotStatusText(SlotStatus.Available), value: SlotStatus.Available },\n        { text: getSlotStatusText(SlotStatus.Reserved), value: SlotStatus.Reserved },\n        { text: getSlotStatusText(SlotStatus.UnderMaintenance), value: SlotStatus.UnderMaintenance },\n        { text: getSlotStatusText(SlotStatus.Archived), value: SlotStatus.Archived }\n    ]\n    return (\n        <FormPage\n            title={id ? \"Update Slot\" : \"New Slot\"}\n            backNavigationLink={!id ? \"/slots\" : `/slots/${slotDetails?.id}/details`}\n            form={\n                <Formik\n                    validationSchema={validationSchema}\n                    enableReinitialize\n                    initialValues={slot}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n\n                                {id && <Message\n                                    content='Change in price will not affect any on going contract for this slot.'\n                                />}\n                                {!!id && slot.status === SlotStatus.Rented &&\n                                    <DetailItem title=\"Status\" value={<Label content={getSlotStatusText(SlotStatus.Rented)} color={getSlotStatusColor(SlotStatus.Rented)} />} />\n                                }\n                                <FormTextInput label=\"Slot Number\" name=\"slotNumber\" placeholder=\"Slot Number\" />\n                                <FormTextInput label=\"Size\" name=\"size\" placeholder=\"Size\" />\n                                <FormTextInput label=\"Rental Fee\" name=\"price\" placeholder=\"Rental Fee\" />\n                                {!!id && slot.status != SlotStatus.Rented && <FormSelectInput\n                                    options={slotStatusOptions}\n                                    name=\"status\"\n                                    placeholder=\"Slot status\"\n                                    label=\"Status\"\n                                />}\n\n                                <FormButtonContainer>\n                                    <Button\n                                        className=\"form__button\"\n                                        type=\"submit\"\n                                        content=\"Submit\"\n                                        color=\"orange\"\n                                        loading={isSaving}\n                                    />\n                                </FormButtonContainer>\n\n                            </Form>\n                        )\n                    }\n                </Formik>\n                // <FormContainer\n                //     title={id ? \"Update Slot\" : \"New Slot\"}\n                //     children={\n                //         <Formik\n                //             validationSchema={validationSchema}\n                //             enableReinitialize\n                //             initialValues={slot}\n                //             onSubmit={values => onSubmit(values)}>\n                //             {\n                //                 ({ handleSubmit }) => (\n                //                     <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n\n                //                         {id && <Message\n                //                             content='Change in price will not affect any on going contract for this slot.'\n                //                         />}\n\n                //                         <FormTextInput label=\"Slot Number\" name=\"slotNumber\" placeholder=\"Slot Number\" />\n                //                         <FormTextInput label=\"Size\" name=\"size\" placeholder=\"Size\" />\n                //                         <FormTextInput label=\"Rental Fee\" name=\"price\" placeholder=\"Rental Fee\" />\n\n                //                         <div className=\"form__button-container py-3\">\n                //                             <Button\n                //                                 className=\"form__button\"\n                //                                 type=\"submit\"\n                //                                 content=\"Submit\"\n                //                                 color=\"orange\"\n                //                                 loading={isSaving}\n                //                             />\n                //                         </div>\n\n                //                     </Form>\n                //                 )\n                //             }\n                //         </Formik>\n                //     }\n                // />\n            }\n        />\n    )\n}\n\nexport default SlotForm;","import { useEffect, useMemo, useState } from \"react\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchTenantsAsync } from \"./tenantSlice\";\nimport history from '../../app/utils/history';\n\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\n\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport MainPage from \"../../app/layouts/components/pages/MainPage\";\nimport CustomTable from \"../../app/layouts/components/table/CustomTable\";\nimport { Label, Select } from 'semantic-ui-react';\nimport { toast } from \"react-toastify\";\n\nconst Tenant = () => {\n    const [searchKey, setSearchKey] = useState('');\n    const { tenants, isFetching: isFetchingTenants } = useAppSelecter(state => state.tenant);\n    const [selectedStatus, setSelectedStatus] = useState<boolean | undefined>(true);\n\n    const dispatch = useAppDispatch();\n\n    const data = useMemo(() => {\n        let searchResult = tenants;\n        if (!!searchKey) {\n            searchResult = tenants.filter(i => i.firstName.toLowerCase().includes(searchKey.toLowerCase())\n                || i.lastName.toLowerCase().includes(searchKey.toLowerCase())\n                || i.businessName.toLowerCase().includes(searchKey.toLowerCase())\n                || i.phone.toLowerCase().includes(searchKey.toLowerCase())\n                || (!!i.contract && i.contract?.slotNumber.toLowerCase().includes(searchKey.toLowerCase())));\n        }\n\n        if (!!selectedStatus) {\n            searchResult = searchResult.filter(i => i.isActive === selectedStatus)\n        }\n\n        return searchResult;\n    }, [tenants, searchKey, selectedStatus])\n\n    useEffect(() => {\n        dispatch(fetchTenantsAsync());\n    }, [])\n\n    const columns = [\n        { title: 'Account Number' },\n        { title: 'Full Name' },\n        { title: 'Business Name' },\n        { title: 'Contact Number' },\n        { title: 'Slot' },\n        { title: 'Status' },\n        { title: '' },\n    ]\n\n    const tenantStatusOptions = [\n        { text: \"All\", value: undefined },\n        { text: \"Active\", value: true },\n        { text: \"Not active\", value: false }\n    ]\n\n    if (isFetchingTenants) return <LoadingComponent content=\"Loading Tenants...\" />\n\n    return (\n        <MainPage\n            title=\"Tenants\"\n            content={\n                <CustomTable\n                    searchValue={searchKey}\n                    onSearch={(value: string) => setSearchKey(value)}\n                    buttonTitle=\"Add Tenant\"\n                    navigateTo=\"/tenants/create\"\n                    columns={columns}\n                    tableControls={\n                        <Select\n                            options={tenantStatusOptions}\n                            value={selectedStatus}\n                            onChange={(e, d) => setSelectedStatus(!!d.value ? d.value as boolean : undefined)}\n                            name=\"slotId\"\n                            placeholder=\"Select status\"\n                            label=\"Tenant Status\"\n                        />\n                    }\n                    rows=\n                    {\n                        !data.length ?\n                            [\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={columns.length}>\n                                        No data\n                                    </TableCell>\n                                </TableRow>\n                            ]\n                            :\n                            data.map(tenant => <TableRow key={tenant.id}>\n                                <TableCell align=\"center\">\n                                    {tenant.tenantUniqueId}\n                                </TableCell>\n\n                                <TableCell align=\"center\">\n                                    {`${tenant.firstName} ${tenant.lastName}`}\n                                </TableCell>\n\n                                <TableCell align=\"center\">\n                                    {tenant.businessName}\n                                </TableCell>\n\n                                <TableCell align=\"center\">\n                                    {tenant.phone}\n                                </TableCell>\n\n                                <TableCell align=\"center\">\n                                    {tenant.contract?.slotNumber}\n                                </TableCell>\n\n                                <TableCell align=\"center\">\n                                    {\n                                        tenant.isActive ?\n                                            <Label color=\"orange\" content=\"Active\" /> :\n                                            <Label color=\"red\" content=\"Not Active\" />\n                                    }\n                                </TableCell>\n\n                                <TableCell align=\"right\">\n                                    <NavigateNextOutlinedIcon onClick={() => history.push(`/tenants/${tenant.id}/details`)} />\n                                </TableCell>\n\n                            </TableRow>\n                            )\n                    }\n                />\n            }\n        />\n    );\n}\n\nexport default Tenant;","import { useField, useFormikContext } from \"formik\";\nimport { Col, FormLabel, Row } from \"react-bootstrap\";\nimport { Label } from \"semantic-ui-react\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './form.scss'\n\ninterface Props {\n    placeholderText: string\n    name: string\n    label?: string\n}\n\nconst FormDateInput = (props: Props) => {\n    const { setFieldValue } = useFormikContext();\n\n    const [field, meta] = useField(props.name)\n\n    return (\n        <Row className=\"mb-3\">\n            <Col lg={2}>\n                <FormLabel className=\"form__label\">{props.label}</FormLabel>\n            </Col>\n\n            <Col>\n                <DatePicker\n                    className=\"form__input\"\n                    {...field}\n                    {...props}\n                    selected={(field.value && new Date(field.value)) || null}\n                    onChange={value => setFieldValue(field.name, value)}\n                    dateFormat={\"MMMM d, yyyy\"}\n                />\n\n                {\n                    meta.touched && meta.error ?\n                        (\n                            <Label className=\"my-1\" basic color=\"red\">{meta.error}</Label>\n                        ) :\n                        null\n                }\n            </Col>\n        </Row>\n    );\n}\n\nexport default FormDateInput;\n\n\n","import { useEffect, useState } from \"react\";\nimport history from \"../../app/utils/history\";\nimport { useParams } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { fetchTenantDetailsAsync, createTenantsAsync, updateTenantDetailsAsync } from \"./tenantSlice\";\nimport { fetchSlotsAsync } from \"../slot/slotSlice\";\nimport { SlotStatus } from \"../../app/models/slot\";\n\nimport FormDateInput from \"../../app/layouts/components/form/FormDateInput\";\nimport FormPage from \"../../app/layouts/components/pages/FormPage\";\nimport FormSelectInput from \"../../app/layouts/components/form/FormSelectInput\";\nimport FormTextInput from \"../../app/layouts/components/form/FormTextInput\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport AddButton from \"../../app/layouts/components/buttons/AddButton\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\nimport { ICreateTenantInput } from \"../../app/models/tenant\";\n\nconst futureDate = () => {\n    const currentDate = new Date();\n    var year = currentDate.getFullYear();\n    var month = currentDate.getMonth();\n    var day = currentDate.getDate();\n    return new Date(year + 1, month, day);\n}\n\nconst TenantForm = () => {\n    const { id } = useParams<{ id: string }>();\n    const { slotId } = useParams<{ slotId: string }>();\n    const [slotsLoaded, setSlotsLoaded] = useState(false);\n\n    const [tenant, setTenant] = useState<ICreateTenantInput>({\n        id: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        businessName: \"\",\n        address: \"\",\n        contact: \"\",\n        slotId: undefined,\n        startDate: new Date(),\n        endDate: futureDate()\n    })\n\n    const { isFetching: isFetchingTenants, isSaving, tenant: tenantDetails, isFetchingDetails: isFetchingTenantDetails } = useAppSelecter(state => state.tenant);\n    const { slots: slotsData } = useAppSelecter(state => state.slot);\n\n    const dispatch = useAppDispatch();\n\n    const fetchSlots = async () => {\n        await dispatch(fetchSlotsAsync());\n        setSlotsLoaded(true);\n    }\n\n    useEffect(() => {\n        fetchSlots();\n    }, [])\n\n\n    useEffect(() => {\n        if (slotId && slotsLoaded)\n            setTenant(prev => {\n                return { ...prev, slotId }\n            })\n    }, [slotId, slotsLoaded])\n\n    useEffect(() => {\n        if (id) dispatch(fetchTenantDetailsAsync(id));\n    }, [id])\n\n    useEffect(() => {\n        tenantDetails && setTenant(prev => {\n            return {\n                ...prev,\n                id: tenantDetails.id,\n                firstName: tenantDetails.firstName,\n                lastName: tenantDetails.lastName,\n                businessName: tenantDetails.businessName,\n                address: tenantDetails.address,\n                contact: tenantDetails.phone\n            }\n        });\n    }, [tenantDetails])\n\n    const validationSchema = Yup.object({\n        firstName: Yup.string().required(\"First Name is required.\"),\n        lastName: Yup.string().required(\"Last Name is required.\"),\n        businessName: Yup.string().required(\"Business name is required.\"),\n        address: Yup.string().required(\"Address is required.\"),\n        contact: Yup.string().required(\"Contact number is required.\"),\n        startDate: Yup.string().required(\"End date is required.\"),\n        endDate: Yup.string().required(\"End date is required.\"),\n    })\n\n    if (isFetchingTenants) return (<LoadingComponent content=\"Loading tenants and slot...\" />)\n\n    const handleResult = (data: any) => {\n        if (!!data.error) {\n            console.log('error')\n        } else {\n            history.push(`/tenants/${!!id ? id : (data.payload as any).id}/details`)\n        }\n    }\n\n    const onSubmit = async (values: ICreateTenantInput) => {\n        if (!values.firstName)\n            return;\n\n        if (!!id) {\n            await dispatch(updateTenantDetailsAsync({\n                id: values.id,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                businessName: values.businessName,\n                address: values.address,\n                contact: values.contact,\n            })).then(handleResult);;\n\n        } else {\n            await dispatch(createTenantsAsync({\n                ...values,\n                startDate: new Date(),\n                endDate: futureDate(),\n                slotId: !!slotId ? slotId : values.slotId\n            })).then(handleResult);\n        }\n    }\n\n    return (\n        <FormPage\n            title={!!id ? \"Update Tenant\" : \"New Tenant\"}\n            backNavigationLink={slotId ? \"/map\" : \"/tenants\"}\n            form={\n                <Formik\n                    validationSchema={validationSchema}\n                    enableReinitialize\n                    initialValues={tenant}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit, isValid }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n\n                                {!id && <FormSelectInput\n                                    options={slotsData.filter(i => i.status === SlotStatus.Available).map(s => ({ text: s.slotNumber, value: s.id }))}\n                                    name=\"slotId\"\n                                    placeholder=\"Slot Number\"\n                                    label=\"Slot Number\"\n                                />}\n\n                                <FormTextInput name=\"firstName\" placeholder=\"First Name\" label=\"First Name\" />\n                                <FormTextInput name=\"lastName\" placeholder=\"Last Name\" label=\"Last Name\" />\n                                <FormTextInput name=\"businessName\" placeholder=\"Business Name\" label=\"Business Name\" />\n                                <FormTextInput name=\"address\" placeholder=\"Address\" label=\"Address\" />\n                                <FormTextInput name=\"contact\" placeholder=\"Contact Number\" label=\"Contact Number\" />\n                                <FormDateInput name=\"startDate\" placeholderText=\"Start date\" label=\"Start Date\" />\n                                <FormDateInput name=\"endDate\" placeholderText=\"End date\" label=\"End Date\" />\n\n                                <FormButtonContainer>\n                                    <AddButton loading={isSaving} disabled={!isValid} />\n                                </FormButtonContainer>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            }\n        />\n    )\n}\n\nexport default TenantForm;","import React, { useMemo, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst thumbsContainer: any = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumb: any = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\n\ninterface IImageUpload {\n  files: File[],\n  onDrop: (acceptedFiles: File[]) => void\n}\n\nconst ImageUpload: React.FC<IImageUpload> = ({ files, onDrop }) => {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: onDrop\n  });\n\n  const style: any = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  ]);\n\n  const thumbs = files.map((file: any) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          alt={file.name}\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <div>\n      <h4 className=\"page__title d-flex align-items-center mb-3\">Upload Contract</h4>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </div>\n  );\n}\n\nexport default ImageUpload;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n    title: string;\n    icon?: React.ReactNode;\n    url?: string;\n    onClick: () => void;\n    color?: string;\n    disabled?: boolean;\n}\n\nconst FunctionalButton: React.FC<Props> = ({ disabled, color, onClick, icon, title, url }) => {\n\n    if (!!url)\n        return (\n            <a href={url} target='_blank' >\n                <Button className={`me-2 btn-${color}`} onClick={onClick}>\n                    {icon && icon}\n                    {title}\n                </Button>\n            </a>\n        );\n\n    return (\n        <Button disabled={disabled} className={`me-2 btn-${color}`} onClick={onClick}>\n            {icon && icon}\n            {title}\n        </Button>\n    );\n\n\n}\n\nexport default FunctionalButton;","\nimport React from 'react';\n\ninterface Props {\n    url: string\n}\n\nconst ImageThumbnail: React.FC<Props> = ({ url }) => {\n    return (\n        <div className=\"border my-2\">\n            <img\n                className='image__thumbnail w-100'\n                src={url}\n                alt=\"\"\n            />\n        </div>\n    );\n}\n\nexport default ImageThumbnail;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { dateFormatter } from \"../../app/layouts/formatter/common\";\nimport { useAppDispatch, useAppSelecter } from \"../../app/store/configureStore\";\nimport { deleteTenantContractPhoto, fetchTenantDetailsAsync, getTenantContractPhoto, terminateTenantContract, uploadTenantContractPhoto } from \"./tenantSlice\";\n\nimport DetailItem from \"../../app/layouts/components/items/DetailItem\";\nimport DetailsPage from \"../../app/layouts/components/pages/DetailsPage\";\nimport FormButtonContainer from \"../../app/layouts/components/form/FormButtonContainer\";\nimport LoadingComponent from \"../../app/layouts/components/loading/LoadingComponent\";\nimport NavigationButton from \"../../app/layouts/components/buttons/NavigationButton\";\nimport ImageUpload from \"../../app/layouts/image-upload/ImageUpload\";\nimport FunctionalButton from \"../../app/layouts/components/buttons/FunctionalButton\";\nimport ImageFullWidth from \"../../app/layouts/components/images/ImageFullWidth\";\nimport DeleteButton from \"../../app/layouts/components/buttons/DeleteButton\";\nimport ImageThumbnail from \"../../app/layouts/components/images/ImageThumbnail\";\nimport { Col, Row } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport history from \"../../app/utils/history\";\n\nconst TenantDetails = () => {\n\n    const { id } = useParams<{ id: string }>();\n\n    const { tenant, isFetchingDetails, contractPhotos, isSaving, isFetchingPhotos } = useAppSelecter(state => state.tenant);\n    const dispatch = useAppDispatch();\n    const [files, setFiles] = useState<File[]>([]);\n    const [isLoadingPhotos, setIsLoadingPhotos] = useState(false);\n\n    useEffect(() => {\n        if (id) dispatch(fetchTenantDetailsAsync(id));\n    }, [])\n\n    useEffect(() => {\n        if (tenant) dispatch(getTenantContractPhoto(tenant.contract?.id!));\n    }, [tenant])\n\n    if (isFetchingDetails || !tenant || isSaving) return (<LoadingComponent content=\"Loading tenant...\" />)\n\n    const { businessName, firstName, lastName, address, phone, contract } = tenant\n\n    const onDrop = (acceptedFiles: File[]) => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })));\n    }\n\n    const handleDeleteContractPhoto = async (id: string) => {\n        setIsLoadingPhotos(true);\n        await dispatch(deleteTenantContractPhoto(id))\n            .then(() => dispatch(getTenantContractPhoto(tenant.contract?.id!)))\n        setIsLoadingPhotos(false);\n    }\n\n    const upload = async () => {\n        setIsLoadingPhotos(true);\n        files.forEach(async (file) => {\n            dispatch(uploadTenantContractPhoto({ id: tenant.contract?.id!, file }))\n                .then(() => dispatch(getTenantContractPhoto(tenant.contract?.id!)))\n        })\n        setIsLoadingPhotos(false);\n        setFiles([]);\n    }\n\n    const handleTerminateTenantContract = async (id: string) => {\n        await dispatch(terminateTenantContract(id))\n        history.push('/tenants')\n    }\n\n    return (\n        <>\n            <DetailsPage\n                title=\"Personal Information\"\n                backNavigationLink=\"/tenants\"\n                content={\n                    <>\n                        <DetailItem title=\"Business Name\" value={businessName} />\n                        <DetailItem title=\"First Name\" value={firstName} />\n                        <DetailItem title=\"Last Name\" value={lastName} />\n                        <DetailItem title=\"Address\" value={address} />\n                        <DetailItem title=\"Contact Number\" value={phone} />\n\n                        <FormButtonContainer>\n                            <NavigationButton title=\"Edit\" navigateTo={`/tenants/${id}/manage`} />\n                        </FormButtonContainer>\n                    </>\n                }\n            />\n\n            <DetailsPage\n                title=\"Contract\"\n                content={\n                    <>\n                        <DetailItem title=\"Slot Number\" value={contract?.slotNumber} />\n                        <DetailItem title=\"Start Date\" value={dateFormatter(contract?.startDate)} />\n                        <DetailItem title=\"End Date\" value={dateFormatter(contract?.endDate)} />\n                        <DetailItem title=\"Amount\" value={contract?.price} />\n                        {\n                            isLoadingPhotos ? <>Loading contracts...</>\n                                : <DetailItem title=\"Contract\" value={\n                                    contractPhotos && contractPhotos.map(i =>\n                                        <Row className=\"mb-3 align-items-center \">\n                                            <Col lg={9}>\n                                                <p>Uploaded on {moment(i.dateCreated).format('YYYY, MMM DD')}</p>\n                                                <ImageThumbnail url={i.url} />\n                                            </Col>\n\n                                            <Col>\n                                                <FunctionalButton url={i.url} title=\"View Image\" onClick={() => { }} />\n                                                <DeleteButton onClick={() => { handleDeleteContractPhoto(i.id) }} loading={isSaving} />\n                                            </Col>\n                                        </Row>\n                                    )\n                                } />\n                        }\n                        <FormButtonContainer>\n                            <ImageUpload files={files} onDrop={onDrop} />\n                            <FunctionalButton title=\"Upload\" onClick={() => upload()} disabled={!files || files.length < 1} />\n                            <FunctionalButton title=\"Clear\" color=\"danger\" onClick={() => setFiles([])} disabled={!files || files.length < 1} />\n                        </FormButtonContainer>\n\n                        <Row className=\"my-5\">\n                            <Col className=\"offset-lg-10\">\n                                <FunctionalButton title=\"Terminate Contract\" color=\"danger\" onClick={() => { handleTerminateTenantContract(id!) }} />\n                            </Col>\n                        </Row>\n                    </>\n                }\n            />\n\n\n        </>\n    );\n}\n\nexport default TenantDetails;","import React, { useEffect, useMemo, useState } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport MainPage from '../../app/layouts/components/pages/MainPage';\nimport CustomTable from '../../app/layouts/components/table/CustomTable';\nimport history from '../../app/utils/history';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport { deleteUserDetailsAsync, fetchUserDetailsAsync, fetchUsersAsync, updateUserDetailsAsync } from './UserSlice';\nimport LoadingComponent from '../../app/layouts/components/loading/LoadingComponent';\nimport DeleteButton from '../../app/layouts/components/buttons/DeleteButton';\nimport { Label } from 'semantic-ui-react';\nimport NavigationButton from '../../app/layouts/components/buttons/NavigationButton';\nimport { useParams } from 'react-router-dom';\nimport NavigateNextOutlinedIcon from '@mui/icons-material/NavigateNextOutlined';\n\n\nconst User = () => {\n    const { id } = useParams<{ id: string }>();\n    const [searchKey, setSearchKey] = useState('');\n    const { users, isFetching: isFetchingUsers, isSaving } = useAppSelecter(state => state.user);\n\n    const dispatch = useAppDispatch();\n\n    const data = useMemo(() => {\n        if (!!searchKey) {\n            return users.filter(i =>\n                i.firstName.toLowerCase().includes(searchKey.toLowerCase()) ||\n                i.lastName.toLowerCase().includes(searchKey.toLowerCase())\n            );\n        }\n        return users;\n    }, [users, searchKey])\n\n    useEffect(() => {\n        dispatch(fetchUsersAsync())\n    }, [])\n\n    const columns = [\n        { title: 'Username' },\n        { title: 'Full Name' },\n        { title: 'Contact Number' },\n        { title: 'Address' },\n        { title: 'Role' },\n        { title: '' },\n    ]\n\n    if (isFetchingUsers || isSaving) return <LoadingComponent content=\"Loading users...\" />\n\n    return (\n        <MainPage\n            title=\"App Users\"\n            content={\n                <CustomTable\n                    searchValue={searchKey}\n                    onSearch={(value: string) => setSearchKey(value)}\n                    buttonTitle=\"Add User\"\n                    navigateTo=\"/users/create\"\n                    columns={columns}\n                    rows={\n                        !data.length ?\n                            [\n                                <TableRow>\n                                    <TableCell align=\"center\" colSpan={8}>\n                                        No data\n                                    </TableCell>\n                                </TableRow>\n                            ]\n                            :\n                            data.map(user =>\n                                <TableRow key={user.id}>\n                                    <TableCell align=\"center\">\n                                        {user.username}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {`${user.firstName} ${user.lastName}`}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {user.phone}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {user.address}\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        {user.roles.join(\", \")}\n                                    </TableCell>\n\n                                    <TableCell align=\"right\">\n                                        <NavigateNextOutlinedIcon onClick={() => history.push(`/users/${user.id}/details`)} />\n                                    </TableCell>\n\n                                </TableRow>\n                            )\n                    }\n                />\n            }\n        />\n    );\n}\n\nexport default User;","import React, { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DeleteButton from '../../app/layouts/components/buttons/DeleteButton';\nimport NavigationButton from '../../app/layouts/components/buttons/NavigationButton';\nimport FormButtonContainer from '../../app/layouts/components/form/FormButtonContainer';\nimport DetailItem from '../../app/layouts/components/items/DetailItem';\nimport LoadingComponent from '../../app/layouts/components/loading/LoadingComponent';\nimport DetailsPage from '../../app/layouts/components/pages/DetailsPage';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport history from '../../app/utils/history';\nimport { deleteUserDetailsAsync, fetchUserDetailsAsync, fetchUsersAsync } from './UserSlice';\n\nconst UserDetails = () => {\n    const { user, isFetchingDetails, isSaving } = useAppSelecter(state => state.user);\n    const account = useAppSelecter(state => state.account);\n    const dispatch = useAppDispatch();\n\n    const { id } = useParams<{ id: string }>();\n\n    const canEdit = useMemo(() => {\n        if(!!user) {\n            const isAdmin = account?.user?.roles.some(i => i.toLowerCase() === \"admin\");\n            if(isAdmin) return false;\n\n            const isOwner = user.roles.some(i => i.toLowerCase() === \"owner\");\n            if (isOwner) return false;\n\n            return true;\n        }\n\n        return false;\n    }, [user]);\n\n    useEffect(() => {\n        if (id) dispatch(fetchUserDetailsAsync(id));\n    }, [])\n\n    const handleDelete = async (id: string) => {\n        await dispatch(deleteUserDetailsAsync(id));\n        history.push(\"/users\");\n        dispatch(fetchUsersAsync())\n    }\n\n\n    if (isFetchingDetails || !user) return (<LoadingComponent content=\"Loading announcement details...\" />)\n\n    const { username, firstName, lastName, phone, email, address, roles } = user\n\n    return (\n        <DetailsPage\n            title=\"User Details\"\n            backNavigationLink='/users'\n            content={\n                <>\n                    <DetailItem title=\"Username\" value={username} />\n                    <DetailItem title=\"First Name\" value={firstName} />\n                    <DetailItem title=\"Last Name\" value={lastName} />\n                    <DetailItem title=\"Contact Number\" value={phone} />\n                    <DetailItem title=\"Address\" value={address} />\n                    <DetailItem title=\"Role\" value={roles.join(\", \")} />\n                    {canEdit &&\n                        <FormButtonContainer>\n                            <NavigationButton title=\"Edit\" navigateTo={`/users/${user.id}/manage`} />\n                            <DeleteButton onClick={() => handleDelete(user.id)} loading={isSaving} />\n                        </FormButtonContainer>\n                    }\n                </>\n            }\n        />\n    );\n}\n\nexport default UserDetails;","import { useEffect, useState } from 'react';\nimport { IApplicationUser, ICreateUserInput, IUpdateUserInput, IUser } from '../../app/models/user';\nimport { useAppDispatch, useAppSelecter } from '../../app/store/configureStore';\nimport * as Yup from 'yup';\nimport { createUserAsync, fetchUserDetailsAsync, updateUserDetailsAsync } from './UserSlice';\nimport history from '../../app/utils/history';\nimport FormPage from '../../app/layouts/components/pages/FormPage';\nimport { Formik } from 'formik';\nimport { Form } from 'semantic-ui-react';\nimport FormTextInput from '../../app/layouts/components/form/FormTextInput';\nimport FormButtonContainer from '../../app/layouts/components/form/FormButtonContainer';\nimport AddButton from '../../app/layouts/components/buttons/AddButton';\nimport { useParams } from 'react-router-dom';\nimport { PayloadAction } from '@reduxjs/toolkit/dist/createAction';\n\nconst UserForm = () => {\n    const { id } = useParams<{ id: string }>();\n\n    const [user, setUser] = useState<ICreateUserInput>(\n        { username: \"\", password: \"\", firstName: \"\", lastName: \"\", phone: \"\", address: \"\" }\n    )\n\n    const { user: userData, isSaving } = useAppSelecter(state => state.user);\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!!id) dispatch(fetchUserDetailsAsync(id))\n    }, [])\n\n    useEffect(() => {\n        if (userData) setUser(prev => {\n            return {\n                ...prev,\n                id: userData.id,\n                firstName: userData.firstName,\n                lastName: userData.lastName,\n                phone: userData.phone,\n                email: userData.email,\n                address: userData.address\n            }\n        })\n    }, [userData])\n\n    const validationSchema = Yup.object({\n        username: Yup.string().required(\"Username is required\"),\n        password: Yup.string().required(\"Password is required\"),\n        firstName: Yup.string().required(\"First Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        phone: Yup.string().required(\"Contact Number is required\"),\n        address: Yup.string().required(\"Address is required\"),\n    })\n\n    const updtEvalidationSchema = Yup.object({\n        firstName: Yup.string().required(\"First Name is required\"),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        phone: Yup.string().required(\"Contact Number is required\"),\n        address: Yup.string().required(\"Address is required\"),\n    })\n\n    const handleResult = (data: any) => {\n        if (!!data.error) {\n            console.log('error')\n        } else {\n            history.push(`/users/${!!id ? id : (data.payload as IApplicationUser).id}/details`)\n        }\n    }\n\n    const onSubmit = async (values: any) => {\n        if (!!userData) {\n            await dispatch(updateUserDetailsAsync(values)).then(handleResult);\n        } else {\n            await dispatch(createUserAsync(values)).then(handleResult);\n        }\n    }\n\n    return (\n        <FormPage\n            title={userData ? \"Update User\" : \"Add User\"}\n            backNavigationLink=\"/users\"\n            form={\n                <Formik\n                    validationSchema={!userData ? validationSchema : updtEvalidationSchema}\n                    enableReinitialize\n                    initialValues={user}\n                    onSubmit={values => onSubmit(values)}>\n                    {\n                        ({ handleSubmit, isValid }) => (\n                            <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\" >\n                                {!userData && <FormTextInput label=\"Username\" name=\"username\" placeholder=\"Username\" />}\n                                {!userData && <FormTextInput type='password' label=\"Password\" name=\"password\" placeholder=\"Password\" />}\n                                <FormTextInput label=\"First Name\" name=\"firstName\" placeholder=\"First Name\" />\n                                <FormTextInput label=\"Last Name\" name=\"lastName\" placeholder=\"Last Name\" />\n                                <FormTextInput label=\"Contact Number\" name=\"phone\" placeholder=\"Contact Number\" />\n                                <FormTextInput label=\"Address\" name=\"address\" placeholder=\"Address\" />\n\n                                <FormButtonContainer>\n                                    <AddButton loading={isSaving} disabled={!isValid} />\n                                </FormButtonContainer>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            }\n        />\n    );\n}\n\nexport default UserForm;","import { Route, Routes, useLocation } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { fetchCurrentUserAsync } from \"../../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nimport Account from \"../../../features/account/Account\";\nimport Announcement from \"../../../features/announcement/Announcement\";\nimport AnnouncementDetails from \"../../../features/announcement/AnnouncementDetails\";\nimport AnnouncementForm from \"../../../features/announcement/AnnouncementForm\";\nimport Dashboard from \"../../../features/dashboard/Dashboard\";\nimport LoginForm from \"../../../features/account/LoginForm\";\nimport Map from \"../../../features/map/Map\";\nimport ModeOfPayment from \"../../../features/modeOfPayment/ModeOfPayment\";\nimport ModeOfPaymentDetails from \"../../../features/modeOfPayment/ModeOfPaymentDetails\";\nimport ModeOfPaymentForm from \"../../../features/modeOfPayment/ModeOfPaymentForm\";\nimport Payment from \"../../../features/payment/Payment\";\nimport PaymentDetails from \"../../../features/payment/PaymentDetails\";\nimport Report from \"../../../features/report/Report\";\nimport Slot from \"../../../features/slot/Slot\";\nimport SlotDetails from \"../../../features/slot/SlotDetails\";\nimport SlotForm from \"../../../features/slot/SlotForm\";\nimport Tenant from \"../../../features/tenant/Tenant\";\nimport TenantForm from \"../../../features/tenant/TenantForm\";\nimport TenantDetails from \"../../../features/tenant/TenantDetails\";\nimport TenantUpdateForm from \"../../../features/tenant/TenantUpdateForm\";\nimport User from \"../../../features/user/User\";\nimport UserDetails from \"../../../features/user/UserDetails\";\nimport UserForm from \"../../../features/user/UserForm\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  const location = useLocation();\n  \n  const account = useAppSelecter(state => state.account);\n\n  const [loading, setLoading] = useState(true);\n  const dispatch = useAppDispatch();\n\n  const initApp = useCallback(\n    async () => {\n      try {\n        await dispatch(fetchCurrentUserAsync());\n      } catch (error) {\n        console.log(error);\n      }\n    }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  if (loading)\n    return <></>\n\n  return (\n    <>\n      <Routes>\n        <Route path='/' element={<PrivateRoute />}>\n          <Route path='/' element={<Dashboard />} />\n          <Route path='/account' element={<Account />} />\n          <Route path='/map' element={<Map />} />\n\n          <Route path='/announcements' element={<Announcement />} />\n          <Route path={'/announcements/create'} element={<AnnouncementForm />} />\n          <Route path={'/announcements/:id/manage'} element={<AnnouncementForm />} />\n          <Route path='/announcements/:id/details' element={<AnnouncementDetails />} />\n\n          <Route path='/mode-of-payments' element={<ModeOfPayment />} />\n          <Route path='/mode-of-payments' element={<ModeOfPayment />} />\n          <Route path={'/mode-of-payments/create'} element={<ModeOfPaymentForm />} />\n          <Route path={\"/mode-of-payments/:id/manage\"} element={<ModeOfPaymentForm />} />\n          <Route path='/mode-of-payments/:id/details' element={<ModeOfPaymentDetails />} />\n\n          <Route path={'/invoices'} element={<Payment />} />\n          <Route path={'/invoices/:filter'} element={<Payment />} />\n          <Route path='/invoices/:id/details' element={<PaymentDetails />} />\n\n          <Route path='/reports' element={<Report />} />\n\n          <Route path={'/slots'} element={<Slot />} />\n          <Route path={'/slots/:filter'} element={<Slot />} />\n          <Route path={'/slots/create'} element={<SlotForm />} />\n          <Route path={'/slots/:id/manage'} element={<SlotForm />} />\n          <Route path='/slots/:id/details' element={<SlotDetails />} />\n\n          <Route path='/tenants' element={<Tenant />} />\n          <Route path={'/tenants/create'} element={<TenantForm />} />\n          <Route path={'/tenants/:slotId/create'} element={<TenantForm />} />\n          <Route path='/tenants/:id/manage' element={<TenantForm />} />\n          <Route path='/tenants/:id/details' element={<TenantDetails />} />\n        {\n          !!account.user && !!account.user?.roles && account.user?.roles.every(i => i.toLowerCase() !== \"admin\") &&\n          <>\n          <Route path=\"/users\" element={<User />} />\n          <Route path=\"/users/:id/details\" element={<UserDetails />} />\n          <Route path=\"/users/create\" element={<UserForm />} />\n          <Route path=\"/users/:id/manage\" element={<UserForm />} />\n          </>\n        }\n        </Route>\n\n        <Route path='/login' element={<LoginForm />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { Router } from \"react-router-dom\";\nimport type { History } from \"history\";\n\ninterface Props {\n  history: History;\n}\n\nconst CustomRouter:React.FC<Props> = ({ history, ...props }) => {\n  const [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n\n  useEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      {...props}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n};\n\nexport default CustomRouter;","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app/layouts/styles/styles.css'\nimport './app/layouts/styles/styles.scss'\nimport App from './app/layouts/components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { store } from './app/store/configureStore';\nimport history from './app/utils/history';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CustomRouter from './app/layouts/components/CustomRouter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <CustomRouter history={history}>\n      <ToastContainer />\n      <App />\n    </CustomRouter>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}